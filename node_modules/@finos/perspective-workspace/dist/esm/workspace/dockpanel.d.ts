import { DockLayout, DockPanel, TabBar, Widget } from "@lumino/widgets";
import { PerspectiveWorkspace } from "./workspace";
import { PerspectiveViewerWidget } from "./widget";
export declare class PerspectiveDockPanel extends DockPanel {
    constructor(workspace: PerspectiveWorkspace);
    _onTabDetachRequested(sender: TabBar<Widget>, args: TabBar.ITabDetachRequestedArgs<Widget>): void;
    static getWidgets(layout: DockPanel.ILayoutConfig): PerspectiveViewerWidget[];
    static getAreaWidgets(layout: DockLayout.AreaConfig): PerspectiveViewerWidget[];
    widgets(): IterableIterator<PerspectiveViewerWidget>;
    static mapWidgets(widgetFunc: (widget: any) => any, layout: any): DockPanel.ILayoutConfig;
    static mapAreaWidgets(widgetFunc: (widget: any) => any, layout: DockLayout.AreaConfig): DockLayout.AreaConfig;
    onAfterAttach(): void;
}
