import { Widget } from "@lumino/widgets";
import { Message } from "@lumino/messaging";
import type * as psp_viewer from "@finos/perspective-viewer";
import type * as psp from "@finos/perspective";
interface IPerspectiveViewerWidgetOptions {
    node: HTMLElement;
    viewer: psp_viewer.HTMLPerspectiveViewerElement;
}
export declare class PerspectiveViewerWidget extends Widget {
    viewer: psp_viewer.HTMLPerspectiveViewerElement;
    _title: string;
    _is_table_loaded: boolean;
    _is_pivoted: boolean;
    _restore_config?: () => Promise<void>;
    task?: Promise<void>;
    constructor({ viewer, node }: IPerspectiveViewerWidgetOptions);
    get name(): string;
    toggleConfig(): Promise<void>;
    load(table: psp.Table | Promise<psp.Table>): Promise<void>;
    restore(config: psp_viewer.ViewerConfigUpdate & {
        table: string;
    }): Promise<any> | undefined;
    save(): Promise<any>;
    removeClass(name: string): void;
    onCloseRequest(msg: Message): Promise<void>;
}
export {};
