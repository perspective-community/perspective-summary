{
  "version": 3,
  "sources": ["../../src/ts/wasm/engine.ts", "../../src/ts/wasm/perspective-server.poly.ts", "../../src/ts/wasm/emscripten_api.ts", "../../src/ts/perspective-server.worker.ts"],
  "sourcesContent": ["// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport type { MainModule } from \"../../../dist/wasm/perspective-server.js\";\nimport type { EmscriptenServer, PspPtr } from \"./emscripten_api.ts\";\n\nexport type ApiResponse = {\n    client_id: number;\n    data: Uint8Array;\n};\n\nexport interface PerspectiveServerOptions {\n    on_poll_request?: (x: PerspectiveServer) => Promise<void>;\n}\n\nexport class PerspectivePollThread {\n    private poll_handle?: Promise<void>;\n    private server: PerspectiveServer;\n    constructor(server: PerspectiveServer) {\n        this.server = server;\n    }\n\n    private set_poll_handle() {\n        this.poll_handle = new Promise((resolve, reject) =>\n            setTimeout(() =>\n                this.server\n                    .poll()\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => {\n                        this.poll_handle = undefined;\n                    })\n            )\n        );\n\n        return this.poll_handle;\n    }\n\n    async on_poll_request() {\n        if (!this.poll_handle) {\n            await this.set_poll_handle();\n        } else {\n            await this.poll_handle.then(() => {\n                if (!this.poll_handle) {\n                    return this.set_poll_handle();\n                }\n            });\n        }\n    }\n}\n\nexport class PerspectiveServer {\n    clients: Map<number, (buffer: Uint8Array) => Promise<void>>;\n    server: EmscriptenServer;\n    module: MainModule;\n    on_poll_request?: (x: PerspectiveServer) => Promise<void>;\n    constructor(module: MainModule, options?: PerspectiveServerOptions) {\n        this.clients = new Map();\n        this.module = module;\n        this.on_poll_request = options?.on_poll_request;\n        this.server = module._psp_new_server(\n            !!options?.on_poll_request ? 1 : 0\n        ) as EmscriptenServer;\n    }\n\n    /**\n     * Helper function to create server emitter/receiver pairs\n     */\n    make_session(\n        callback: (buffer: Uint8Array) => Promise<void>\n    ): PerspectiveSession {\n        const client_id = this.module._psp_new_session(this.server as any);\n        this.clients.set(client_id, callback);\n        return new PerspectiveSession(\n            this.module,\n            this.server,\n            client_id,\n            this.clients,\n            this.on_poll_request && (() => this.on_poll_request!(this))\n        );\n    }\n\n    async poll() {\n        const polled = this.module._psp_poll(this.server as any);\n        await decode_api_responses(\n            this.module,\n            polled,\n            async (msg: ApiResponse) => {\n                await this.clients.get(msg.client_id)!(msg.data);\n            }\n        );\n    }\n\n    delete() {\n        this.module._psp_delete_server(this.server as any);\n    }\n}\n\nexport class PerspectiveSession {\n    constructor(\n        private mod: MainModule,\n        private server: EmscriptenServer,\n        private client_id: number,\n        private client_map: Map<number, (buffer: Uint8Array) => Promise<void>>,\n        private on_poll_request?: () => Promise<void>\n    ) {}\n\n    async handle_request(view: Uint8Array) {\n        const ptr = await convert_typed_array_to_pointer(\n            this.mod,\n            view,\n            async (viewPtr) => {\n                return this.mod._psp_handle_request(\n                    this.server as any,\n                    this.client_id,\n                    viewPtr as any,\n                    this.mod._psp_is_memory64()\n                        ? (BigInt(view.byteLength) as any as number)\n                        : (view.byteLength as any)\n                );\n            }\n        );\n\n        await decode_api_responses(this.mod, ptr, async (msg: ApiResponse) => {\n            await this.client_map.get(msg.client_id)!(msg.data);\n        });\n\n        if (this.on_poll_request) {\n            await this.on_poll_request();\n        } else {\n            await this.poll();\n        }\n    }\n\n    private async poll() {\n        const polled = this.mod._psp_poll(this.server as any);\n        await decode_api_responses(\n            this.mod,\n            polled,\n            async (msg: ApiResponse) => {\n                if (msg.client_id === 0) {\n                    await this.client_map.get(this.client_id)!(msg.data);\n                } else {\n                    await this.client_map.get(msg.client_id)!(msg.data);\n                }\n            }\n        );\n    }\n\n    close() {\n        this.mod._psp_close_session(this.server as any, this.client_id);\n    }\n}\n\nasync function convert_typed_array_to_pointer(\n    core: MainModule,\n    array: Uint8Array,\n    callback: (_: PspPtr) => Promise<PspPtr>\n): Promise<PspPtr> {\n    const ptr = core._psp_alloc(\n        core._psp_is_memory64()\n            ? (BigInt(array.byteLength) as any as number)\n            : (array.byteLength as any)\n    );\n\n    core.HEAPU8.set(array, Number(ptr));\n    const msg = await callback(ptr);\n    core._psp_free(ptr);\n    return msg;\n}\n\n/**\n * Convert a pointer to WASM memory into an `ApiResponse[]`, via a custom\n * encoding.\n *\n * @param core The emscripten API\n * @param ptr A pointer to a fixed-sized struct representing a set of\n * `proto::Resp` payloads, encoded as a length-prefixed array of\n * (char* data, u32_t len, u32_t client_id) tuples:\n *\n * ```text\n *   N   data    length   client_id   data    length   client_id\n * +-------------------------------------------------------------+\n * | 2 | 0xabc | 9      | 0         | 0xdef | 12     | 0         |\n * +-------------------------------------------------------------+\n *       |                           |\n *       |  +-------------+          |  +----------------+\n *       +--| \"Test Data\" |          +--| \"Hello, World\" |\n *          +-------------+             +----------------+\n * ```\n *\n * @param callback A callback to which is passed the responses. THe responses\n * must be fully processed or copied before the callback returns, as it\n * references memory on the wasm stack.\n */\nasync function decode_api_responses(\n    core: MainModule,\n    ptr: PspPtr,\n    callback: (_: ApiResponse) => Promise<void>\n) {\n    const is_64 = core._psp_is_memory64();\n    const response = new DataView(\n        core.HEAPU8.buffer,\n        Number(ptr),\n        is_64 ? 12 : 8\n    );\n\n    const num_msgs = response.getUint32(0, true);\n    const msgs_ptr = is_64\n        ? response.getBigInt64(4, true)\n        : response.getUint32(4, true);\n\n    const messages = new DataView(\n        core.HEAPU8.buffer,\n        Number(msgs_ptr),\n        num_msgs * (is_64 ? 16 : 12)\n    );\n\n    try {\n        for (let i = 0; i < num_msgs; i++) {\n            const [data_ptr, data_len, client_id] = is_64\n                ? [\n                      messages.getBigInt64(i * 16, true),\n                      messages.getInt32(i * 16 + 8, true),\n                      messages.getInt32(i * 16 + 12, true),\n                  ]\n                : [\n                      messages.getInt32(i * 12, true),\n                      messages.getInt32(i * 12 + 4, true),\n                      messages.getInt32(i * 12 + 8, true),\n                  ];\n\n            const data = new Uint8Array(\n                core.HEAPU8.buffer,\n                Number(data_ptr),\n                data_len\n            );\n\n            const resp = { client_id, data };\n            await callback(resp);\n        }\n    } finally {\n        for (let i = 0; i < num_msgs; i++) {\n            const data_ptr = is_64\n                ? messages.getBigInt64(i * 16, true)\n                : messages.getInt32(i * 12, true);\n\n            core._psp_free(data_ptr as any);\n        }\n\n        core._psp_free(\n            is_64\n                ? (BigInt(messages.byteOffset) as any as number)\n                : (messages.byteOffset as any)\n        );\n        core._psp_free(\n            is_64\n                ? (BigInt(response.byteOffset) as any as number)\n                : (response.byteOffset as any)\n        );\n    }\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport type * as perspective_server from \"../../../dist/wasm/perspective-server.js\";\n\ntype PspPtr = bigint | number;\ntype EmscriptenServer = number;\n\nvar out = console.log.bind(console);\nvar err = console.error.bind(console);\n\nvar UTF8Decoder = new TextDecoder(\"utf8\");\nvar printCharBuffers: Array<Array<number> | null> = [null, [], []];\n\nfunction UTF8ArrayToString(\n    heapOrArray: Uint8Array | Array<number>,\n    idx = 0,\n    maxBytesToRead = NaN\n) {\n    var endIdx = idx + maxBytesToRead;\n    var endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    return UTF8Decoder.decode(\n        heapOrArray instanceof Uint8Array\n            ? heapOrArray.subarray(idx, endPtr)\n            : new Uint8Array(heapOrArray.slice(idx, endPtr))\n    );\n}\n\nfunction printChar(stream: number, curr: number) {\n    var buffer: Array<number> = printCharBuffers[stream]!;\n    if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n    } else {\n        buffer.push(curr);\n    }\n}\n\nexport default async function (obj: any) {\n    let psp_module: perspective_server.MainModule;\n    let is_memory64 = false;\n    let wasm_memory: WebAssembly.Memory;\n    const module = {\n        HaveOffsetConverter() {\n            console.error(\"HaveOffsetConverter\");\n        },\n        __syscall_ftruncate64(...args: any[]) {\n            console.error(\"__syscall_frtuncate64\", args);\n        },\n        __syscall_getdents64(...args: any[]) {\n            console.error(\"__syscall_frtuncate64\", args);\n        },\n        __syscall_unlinkat(...args: any[]) {\n            console.error(\"__syscall_frtuncate64\", args);\n        },\n        __throw_exception_with_stack_trace(ex: number) {\n            // @ts-ignore\n            const e = new WebAssembly.Exception(\n                (psp_module as any).__cpp_exception,\n                [ex],\n                {\n                    traceStack: true,\n                }\n            );\n\n            // e.message = getExceptionMessage(e);\n            e.message = \"Unexpected internal error\";\n            throw e;\n        },\n        clock_time_get(\n            clk_id: number,\n            ignored_precision: bigint,\n            ptime: bigint | number\n        ) {\n            if (is_memory64) {\n                ptime = ptime as bigint;\n                ptime = Number(ptime);\n                if (\n                    !(clk_id == 0 || clk_id == 1 || clk_id == 2 || clk_id == 3)\n                ) {\n                    return 28;\n                }\n                var now;\n\n                if (clk_id === 0) {\n                    now = Date.now();\n                } else {\n                    now = performance.now();\n                }\n\n                const nsec = Math.round(now * 1000 * 1000);\n                const HEAP64 = new BigInt64Array(wasm_memory.buffer);\n                HEAP64[ptime / 8] = BigInt(nsec);\n                return 0;\n            } else {\n                ptime = ptime as number;\n                ptime >>>= 0;\n                if (\n                    !(clk_id == 0 || clk_id == 1 || clk_id == 2 || clk_id == 3)\n                ) {\n                    return 28;\n                }\n\n                var now;\n                if (clk_id === 0) {\n                    now = Date.now();\n                } else {\n                    now = performance.now();\n                }\n\n                var nsec = Math.round(now * 1e6);\n                const HEAP64 = new BigInt64Array(wasm_memory.buffer);\n                HEAP64[ptime >>> 3] = BigInt(nsec);\n                return 0;\n            }\n        },\n        emscripten_asm_const_int(...args: any[]) {\n            return 0;\n        },\n        emscripten_notify_memory_growth(memoryIndex: bigint | number) {\n            if (is_memory64) {\n                memoryIndex = Number(memoryIndex as bigint);\n            } else {\n                memoryIndex = memoryIndex as number;\n                memoryIndex >>>= 0;\n            }\n\n            if (memoryIndex != 0) {\n                console.error(\"abort\");\n            }\n        },\n        environ_get(...args: any[]) {\n            return 0;\n        },\n        environ_sizes_get(...args: any[]) {\n            return 0;\n        },\n        fd_close(...args: any[]) {\n            console.error(\"fd_close\", args);\n            return 0;\n        },\n        fd_read(...args: any[]) {\n            console.error(\"fd_read\", args);\n            return 0;\n        },\n        fd_seek(...args: any[]) {\n            console.error(\"fs_seek\", args);\n            return 0;\n        },\n        fd_write(\n            fd: number,\n            iov: number | bigint,\n            iovcnt: number | bigint,\n            pnum: number | bigint\n        ) {\n            const HEAPU8 = new Uint8Array(wasm_memory.buffer);\n\n            if (!is_memory64) {\n                iov = iov as number;\n                iovcnt = iovcnt as number;\n                pnum = pnum as number;\n                iov >>>= 0;\n                iovcnt >>>= 0;\n                pnum >>>= 0;\n                let num = 0;\n                const HEAPU32 = new Uint32Array(wasm_memory.buffer);\n\n                for (let i = 0; i < iovcnt; i++) {\n                    let ptr = HEAPU32[(iov >>> 2) >>> 0];\n                    let len = HEAPU32[((iov + 4) >>> 2) >>> 0];\n                    iov += 8;\n                    for (let j = 0; j < len; j++) {\n                        printChar(fd, HEAPU8[(ptr + j) >>> 0]);\n                    }\n                    num += len;\n                }\n                HEAPU32[(pnum >>> 2) >>> 0] = num;\n                return 0;\n            } else {\n                iov = Number(iov as bigint);\n                iovcnt = Number(iovcnt as bigint);\n                pnum = Number(pnum as bigint);\n                let num = 0;\n                const HEAPU64 = new BigUint64Array(wasm_memory.buffer);\n\n                for (let i = 0; i < iovcnt; i++) {\n                    let ptr = Number(HEAPU64[iov / 8]);\n                    let len = Number(HEAPU64[(iov + 8) / 8]);\n                    iov += 16;\n                    for (let j = 0; j < len; j++) {\n                        printChar(fd, HEAPU8[ptr + j]);\n                    }\n\n                    num += len;\n                }\n                HEAPU64[pnum / 8] = BigInt(num);\n                return 0;\n            }\n        },\n        proc_exit(e: number) {\n            console.error(\"proc_exit\", e);\n            return 0;\n        },\n    };\n\n    const x = await obj.instantiateWasm(\n        { env: module, wasi_snapshot_preview1: module },\n        (instance: WebAssembly.Instance) => {\n            psp_module =\n                instance.exports as any as perspective_server.MainModule;\n\n            // @ts-ignore\n            is_memory64 = !!psp_module.psp_is_memory64();\n            wasm_memory = instance.exports.memory as WebAssembly.Memory;\n\n            // @ts-ignore\n            psp_module._initialize();\n        }\n    );\n\n    const extensions: Record<string, any> = {};\n    for (const [name, func] of Object.entries(x)) {\n        extensions[`_${name}`] = func;\n    }\n\n    return {\n        ...x,\n        ...extensions,\n        get HEAPU8() {\n            // @ts-ignore\n            return new Uint8Array(wasm_memory.buffer);\n        },\n    };\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport * as perspective_server from \"./perspective-server.poly.ts\";\nexport type * from \"../../../dist/wasm/perspective-js.js\";\nimport type * as perspective_server_t from \"../../../dist/wasm/perspective-server.js\";\n\nexport type PspPtr = BigInt | number;\nexport type EmscriptenServer = bigint | number;\n\nexport async function compile_perspective(\n    wasmBinary: ArrayBuffer\n): Promise<perspective_server_t.MainModule> {\n    const module = await perspective_server.default({\n        locateFile(x: any) {\n            return x;\n        },\n        instantiateWasm: async (\n            imports: any,\n            receive: (_: WebAssembly.Instance) => void\n        ) => {\n            imports[\"env\"] = {\n                ...imports[\"env\"],\n                psp_stack_trace() {\n                    const str = Error().stack || \"\";\n                    const textEncoder = new TextEncoder();\n                    const bytes = textEncoder.encode(str);\n                    const ptr = module._psp_alloc(\n                        module._psp_is_memory64()\n                            ? (BigInt(bytes.byteLength + 1) as any as number)\n                            : bytes.byteLength + 1\n                    );\n\n                    module.HEAPU8.set(bytes, Number(ptr));\n                    module.HEAPU8[Number(ptr) + bytes.byteLength] = 0;\n                    return ptr;\n                },\n                psp_heap_size() {\n                    if (module._psp_is_memory64()) {\n                        return BigInt(module.HEAPU8.buffer.byteLength);\n                    } else {\n                        return module.HEAPU8.buffer.byteLength;\n                    }\n                },\n            };\n\n            const webasm = await WebAssembly.instantiate(wasmBinary, imports);\n            receive(webasm.instance);\n            return webasm.instance.exports;\n        },\n    });\n\n    return module;\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport {\n    PerspectiveSession,\n    PerspectiveServer,\n    PerspectivePollThread,\n} from \"./wasm/engine.ts\";\nimport { compile_perspective } from \"./wasm/emscripten_api.ts\";\n\nlet GLOBAL_SERVER: PerspectiveServer;\nlet POLL_THREAD: PerspectivePollThread;\n\nfunction bindPort(e: MessageEvent) {\n    const port = e.ports[0];\n    let session: PerspectiveSession;\n    port.addEventListener(\"message\", async (msg) => {\n        if (msg.data.cmd === \"init\") {\n            const id = msg.data.id;\n            if (!GLOBAL_SERVER) {\n                const module = await compile_perspective(msg.data.args[0]);\n                GLOBAL_SERVER = new PerspectiveServer(module, {\n                    on_poll_request: () => POLL_THREAD.on_poll_request(),\n                });\n\n                POLL_THREAD = new PerspectivePollThread(GLOBAL_SERVER);\n            }\n\n            session = GLOBAL_SERVER.make_session(async (resp) => {\n                const f = resp.slice().buffer;\n                port.postMessage(f, { transfer: [f] });\n            });\n\n            port.postMessage({ id });\n        } else {\n            await session.handle_request(new Uint8Array(msg.data));\n        }\n    });\n\n    port.start();\n}\n\n// @ts-expect-error wrong scope\nself.addEventListener(\"connect\", bindPort);\nself.addEventListener(\"message\", bindPort);\n"],
  "mappings": "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",
  "names": ["PerspectivePollThread", "server", "resolve", "reject", "PerspectiveServer", "module", "options", "callback", "client_id", "PerspectiveSession", "polled", "decode_api_responses", "msg", "mod", "client_map", "on_poll_request", "view", "ptr", "convert_typed_array_to_pointer", "viewPtr", "core", "array", "is_64", "response", "num_msgs", "msgs_ptr", "messages", "i", "data_ptr", "data_len", "data", "out", "err", "UTF8Decoder", "printCharBuffers", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "printChar", "stream", "curr", "buffer", "perspective_server_poly_default", "obj", "psp_module", "is_memory64", "wasm_memory", "module", "args", "ex", "e", "clk_id", "ignored_precision", "ptime", "now", "nsec", "HEAP64", "memoryIndex", "fd", "iov", "iovcnt", "pnum", "HEAPU8", "num", "HEAPU64", "i", "ptr", "len", "j", "HEAPU32", "x", "instance", "extensions", "name", "func", "compile_perspective", "wasmBinary", "module", "perspective_server_poly_default", "x", "imports", "receive", "str", "bytes", "ptr", "webasm", "GLOBAL_SERVER", "POLL_THREAD", "bindPort", "e", "port", "session", "msg", "id", "module", "compile_perspective", "PerspectiveServer", "PerspectivePollThread", "resp", "f"]
}
