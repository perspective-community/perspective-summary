{
  "version": 3,
  "sources": ["../../src/ts/perspective.node.ts", "../wasm/perspective-js.js", "../../src/ts/wasm/decompress.ts", "../../src/ts/wasm/engine.ts", "../../src/ts/wasm/perspective-server.poly.ts", "../../src/ts/wasm/emscripten_api.ts", "../../src/ts/websocket.ts"],
  "sourcesContent": ["// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nexport type * from \"../../dist/wasm/perspective-js.d.ts\";\n\nimport WebSocket, { WebSocketServer as HttpWebSocketServer } from \"ws\";\nimport stoppable from \"stoppable\";\nimport { promises as fs } from \"node:fs\";\nimport http from \"node:http\";\nimport path from \"node:path\";\nimport { webcrypto } from \"node:crypto\";\nimport type * as net from \"node:net\";\nimport * as url from \"node:url\";\n\nimport * as perspective_client from \"../../dist/wasm/perspective-js.js\";\nimport { load_wasm_stage_0 } from \"./wasm/decompress.js\";\nimport * as engine from \"./wasm/engine.ts\";\nimport { compile_perspective } from \"./wasm/emscripten_api.ts\";\n\nimport * as psp_websocket from \"./websocket.ts\";\n\nconst __dirname = path.dirname(url.fileURLToPath(import.meta.url));\n\nif (!globalThis.crypto) {\n    globalThis.crypto = webcrypto as Crypto;\n}\n\nconst uncompressed_client_wasm = await fs\n    .readFile(path.join(__dirname, \"../../dist/wasm/perspective-js.wasm\"))\n    .then((buffer) => load_wasm_stage_0(buffer.buffer as ArrayBuffer));\n\nawait perspective_client.default({ module_or_path: uncompressed_client_wasm });\nconst SYNC_MODULE = await fs\n    .readFile(path.join(__dirname, \"../../dist/wasm/perspective-server.wasm\"))\n    .then((buffer) => load_wasm_stage_0(buffer.buffer as ArrayBuffer))\n    .then((buffer) => compile_perspective(buffer.buffer as ArrayBuffer));\n\nlet SYNC_CLIENT: perspective_client.Client;\n\nconst SYNC_SERVER = new engine.PerspectiveServer(SYNC_MODULE);\n\n// const SYNC_SERVER = new engine.PerspectiveServer(SYNC_MODULE, {\n//     on_poll_request: () => SYNC_POLL_HANDLE.on_poll_request(),\n// });\n\n// const SYNC_POLL_HANDLE: engine.PerspectivePollThread =\n//     new engine.PerspectivePollThread(SYNC_SERVER);\n\nconst SYNC_SESSION = SYNC_SERVER.make_session(\n    async (resp) => await SYNC_CLIENT.handle_response(resp)\n);\n\nSYNC_CLIENT = new perspective_client.Client(async (req: Uint8Array) => {\n    await SYNC_SESSION.handle_request(req);\n});\n\nexport class PerspectiveServer extends engine.PerspectiveServer {\n    constructor(options?: engine.PerspectiveServerOptions) {\n        super(SYNC_MODULE, options);\n    }\n}\n\nexport const make_session = async (\n    send_response: (buffer: Uint8Array) => Promise<void>\n) => SYNC_SERVER.make_session(send_response);\n\n// Helper function to create client emitter/receiver pairs\nexport function make_client(\n    send_request: (buffer: Uint8Array) => Promise<void>,\n    close?: Function\n) {\n    return new perspective_client.Client(send_request, close);\n}\n\nconst CONTENT_TYPES: Record<string, string> = {\n    \".js\": \"text/javascript\",\n    \".mjs\": \"text/javascript\",\n    \".css\": \"text/css; charset=utf-8\",\n    \".json\": \"application/json\",\n    \".arrow\": \"arraybuffer\",\n    \".feather\": \"arraybuffer\",\n    \".wasm\": \"application/wasm\",\n};\n\n/**\n * Host a Perspective server that hosts data, code files, etc.\n * Strip version numbers from the URL so we can handle CDN-like requests\n * of the form @[^~]major.minor.patch when testing local versions of\n * Perspective against Voila.\n */\nexport async function cwd_static_file_handler(\n    request: http.IncomingMessage,\n    response: http.ServerResponse<http.IncomingMessage>,\n    assets = [\"./\"],\n    { debug = true } = {}\n) {\n    let url =\n        request.url\n            ?.split(/[\\?\\#]/)[0]\n            .replace(/@[\\^~]?\\d+.[\\d\\*]*.[\\d\\*]*/, \"\") || \"/\";\n\n    if (url === \"/\") {\n        url = \"/index.html\";\n    }\n\n    let extname = path.extname(url);\n    let contentType = CONTENT_TYPES[extname] || \"text/html\";\n    try {\n        for (const root of assets) {\n            let filePath = root + url;\n            try {\n                let content = await fs.readFile(filePath);\n                if (typeof content !== \"undefined\") {\n                    if (debug) {\n                        console.log(`200 ${url}`);\n                    }\n                    response.writeHead(200, {\n                        \"Content-Type\": contentType,\n                        \"Access-Control-Allow-Origin\": \"*\",\n                    });\n                    if (extname === \".arrow\" || extname === \".feather\") {\n                        response.end(content, \"utf-8\");\n                    } else {\n                        response.end(content);\n                    }\n\n                    return;\n                }\n            } catch (e) {}\n        }\n\n        if (debug) {\n            console.error(`404 ${url}`);\n        }\n\n        response.writeHead(404);\n        response.end(\"\", \"utf-8\");\n    } catch (error) {\n        if (debug) {\n            console.error(`500 ${url} ${error}`);\n        }\n\n        response.writeHead(500);\n        response.end(\"\", \"utf-8\");\n    }\n}\n\nfunction buffer_to_arraybuffer(\n    buffer: string | Buffer | ArrayBuffer | Buffer[] | Uint8Array\n): Uint8Array {\n    if (typeof buffer === \"string\") {\n        throw new Error(\"Unknown websocket message: \" + buffer);\n    } else if (buffer instanceof ArrayBuffer) {\n        return new Uint8Array(buffer);\n    } else if (buffer instanceof Array) {\n        throw new Error(\"Unknown websocket message: \" + buffer);\n    } else {\n        return new Uint8Array(\n            buffer.buffer.slice(\n                buffer.byteOffset,\n                buffer.byteOffset + buffer.length\n            )\n        );\n    }\n}\n\nfunction invert_promise<T>(): [(t: T) => void, Promise<T>, (t: any) => void] {\n    let sender: ((t: T) => void) | undefined = undefined,\n        reject = undefined;\n    let receiver: Promise<T> = new Promise((x, u) => {\n        sender = x;\n        reject = u;\n    });\n\n    return [sender!, receiver, reject!];\n}\n\nexport class WebSocketServer {\n    _server: http.Server | any; // stoppable has no type ...\n    _wss: HttpWebSocketServer;\n    constructor({ port = 8080, assets = [\"./\"], server = undefined } = {}) {\n        const perspective_server =\n            typeof server === \"undefined\" ? SYNC_SERVER : server;\n\n        port = typeof port === \"undefined\" ? 8080 : port;\n        this._server = stoppable(\n            http.createServer((x, y) => cwd_static_file_handler(x, y, assets))\n        );\n\n        this._wss = new HttpWebSocketServer({\n            noServer: true,\n            perMessageDeflate: true,\n        });\n\n        this._wss.on(\"connection\", (ws) => {\n            console.log(\"... Connecting websocket\");\n            const session = perspective_server.make_session(\n                async (proto: Uint8Array) => {\n                    ws.send(buffer_to_arraybuffer(proto));\n                }\n            );\n\n            ws.on(\"message\", (proto) => {\n                session.handle_request(buffer_to_arraybuffer(proto));\n            });\n\n            ws.on(\"close\", () => {\n                session.close();\n            });\n        });\n\n        this._server.on(\n            \"upgrade\",\n            (\n                request: http.IncomingMessage,\n                socket: net.Socket,\n                head: Buffer\n            ) => {\n                console.log(\"200 Websocket upgrade\");\n                this._wss.handleUpgrade(\n                    request,\n                    socket as net.Socket,\n                    head,\n                    (sock) => this._wss.emit(\"connection\", sock, request)\n                );\n            }\n        );\n\n        this._server.listen(port, () => {\n            console.log(`Listening on ${this._server.address().port}`);\n        });\n    }\n\n    async close() {\n        await new Promise((x) => this._server.stop(x));\n    }\n}\n\nexport function get_hosted_table_names() {\n    return SYNC_CLIENT.get_hosted_table_names();\n}\n\nexport function on_hosted_tables_update(cb: () => void) {\n    return SYNC_CLIENT.on_hosted_tables_update(cb);\n}\n\nexport function remove_hosted_tables_update(id: number) {\n    return SYNC_CLIENT.remove_hosted_tables_update(id);\n}\n\nexport function system_info() {\n    return SYNC_CLIENT.system_info();\n}\n\nexport function on_error(callback: Function) {\n    return SYNC_CLIENT.on_error(callback);\n}\n\n/**\n * Create a table from the global Perspective instance.\n * @param init_data\n * @param options\n * @returns\n */\nexport function table(\n    init_data:\n        | string\n        | ArrayBuffer\n        | Record<string, any>\n        | Record<string, unknown>[],\n    options?: perspective_client.TableInitOptions\n) {\n    return SYNC_CLIENT.table(init_data, options);\n}\n\n/**\n * Create a new client connected via WebSocket to a server implemnting the\n * Perspective Protocol.\n * @param module\n * @param url\n * @returns\n */\nexport async function websocket(\n    url: string\n): Promise<perspective_client.Client> {\n    return await psp_websocket.websocket(\n        WebSocket as unknown as typeof window.WebSocket,\n        perspective_client.Client,\n        url\n    );\n}\n\nexport default {\n    table,\n    websocket,\n    get_hosted_table_names,\n    on_hosted_tables_update,\n    remove_hosted_tables_update,\n    on_error,\n    system_info,\n    WebSocketServer,\n};\n", "let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_export_2(addHeapObject(e));\n    }\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_4.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_4.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\n\nfunction makeClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        try {\n            return f(state.a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_4.get(state.dtor)(state.a, state.b);\n                state.a = 0;\n                CLOSURE_DTORS.unregister(state);\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches && builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nexport function init() {\n    wasm.init();\n}\n\nfunction __wbg_adapter_50(arg0, arg1) {\n    const ret = wasm.__wbindgen_export_5(arg0, arg1);\n    return takeObject(ret);\n}\n\nfunction __wbg_adapter_53(arg0, arg1, arg2) {\n    wasm.__wbindgen_export_6(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_251(arg0, arg1, arg2, arg3) {\n    wasm.__wbindgen_export_7(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\nconst ClientFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_client_free(ptr >>> 0, 1));\n/**\n * An instance of a [`Client`] is a connection to a single\n * `perspective_server::Server`, whether locally in-memory or remote over some\n * transport like a WebSocket.\n *\n * The browser and node.js libraries both support the `websocket(url)`\n * constructor, which connects to a remote `perspective_server::Server`\n * instance over a WebSocket transport.\n *\n * In the browser, the `worker()` constructor creates a new Web Worker\n * `perspective_server::Server` and returns a [`Client`] connected to it.\n *\n * In node.js, a pre-instantied [`Client`] connected synhronously to a global\n * singleton `perspective_server::Server` is the default module export.\n *\n * # JavaScript Examples\n *\n * Create a Web Worker `perspective_server::Server` in the browser and return a\n * [`Client`] instance connected for it:\n *\n * ```javascript\n * import perspective from \"@finos/perspective\";\n * const client = await perspective.worker();\n * ```\n *\n * Create a WebSocket connection to a remote `perspective_server::Server`:\n *\n * ```javascript\n * import perspective from \"@finos/perspective\";\n * const client = await perspective.websocket(\"ws://locahost:8080/ws\");\n * ```\n *\n * Access the synchronous client in node.js:\n *\n * ```javascript\n * import { default as client } from \"@finos/perspective\";\n * ```\n */\nexport class Client {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Client.prototype);\n        obj.__wbg_ptr = ptr;\n        ClientFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ClientFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_client_free(ptr, 0);\n    }\n    /**\n     * @returns {string}\n     */\n    __getClassname() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.client___getClassname(retptr, this.__wbg_ptr);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {Function} send_request\n     * @param {Function | null} [close]\n     */\n    constructor(send_request, close) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.client_new(retptr, addHeapObject(send_request), isLikeNone(close) ? 0 : addHeapObject(close));\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            ClientFinalization.register(this, this.__wbg_ptr, this);\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n     * @param {Function} on_response\n     * @returns {ProxySession}\n     */\n    new_proxy_session(on_response) {\n        try {\n            const ret = wasm.client_new_proxy_session(this.__wbg_ptr, addBorrowedObject(on_response));\n            return ProxySession.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n     * @param {any} value\n     * @returns {Promise<void>}\n     */\n    handle_response(value) {\n        const ret = wasm.client_handle_response(this.__wbg_ptr, addHeapObject(value));\n        return takeObject(ret);\n    }\n    /**\n     * @param {string} error\n     * @param {Function | null} [reconnect]\n     * @returns {Promise<void>}\n     */\n    handle_error(error, reconnect) {\n        const ptr0 = passStringToWasm0(error, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.client_handle_error(this.__wbg_ptr, ptr0, len0, isLikeNone(reconnect) ? 0 : addHeapObject(reconnect));\n        return takeObject(ret);\n    }\n    /**\n     * @param {Function} callback\n     * @returns {Promise<number>}\n     */\n    on_error(callback) {\n        const ret = wasm.client_on_error(this.__wbg_ptr, addHeapObject(callback));\n        return takeObject(ret);\n    }\n    /**\n     * Creates a new [`Table`] from either a _schema_ or _data_.\n     *\n     * The [`Client::table`] factory function can be initialized with either a\n     * _schema_ (see [`Table::schema`]), or data in one of these formats:\n     *\n     * - Apache Arrow\n     * - CSV\n     * - JSON row-oriented\n     * - JSON column-oriented\n     * - NDJSON\n     *\n     * When instantiated with _data_, the schema is inferred from this data.\n     * While this is convenient, inferrence is sometimes imperfect e.g.\n     * when the input is empty, null or ambiguous. For these cases,\n     * [`Client::table`] can first be instantiated with a explicit schema.\n     *\n     * When instantiated with a _schema_, the resulting [`Table`] is empty but\n     * with known column names and column types. When subsqeuently\n     * populated with [`Table::update`], these columns will be _coerced_ to\n     * the schema's type. This behavior can be useful when\n     * [`Client::table`]'s column type inferences doesn't work.\n     *\n     * The resulting [`Table`] is _virtual_, and invoking its methods\n     * dispatches events to the `perspective_server::Server` this\n     * [`Client`] connects to, where the data is stored and all calculation\n     * occurs.\n     *\n     * # Arguments\n     *\n     * - `arg` - Either _schema_ or initialization _data_.\n     * - `options` - Optional configuration which provides one of:\n     *     - `limit` - The max number of rows the resulting [`Table`] can\n     *       store.\n     *     - `index` - The column name to use as an _index_ column. If this\n     *       `Table` is being instantiated by _data_, this column name must be\n     *       present in the data.\n     *     - `name` - The name of the table. This will be generated if it is\n     *       not provided.\n     *     - `format` - The explicit format of the input data, can be one of\n     *       `\"json\"`, `\"columns\"`, `\"csv\"` or `\"arrow\"`. This overrides\n     *       language-specific type dispatch behavior, which allows stringified\n     *       and byte array alternative inputs.\n     *\n     * # JavaScript Examples\n     *\n     * Load a CSV from a `string`:\n     *\n     * ```javascript\n     * const table = await client.table(\"x,y\\n1,2\\n3,4\");\n     * ```\n     *\n     * Load an Arrow from an `ArrayBuffer`:\n     *\n     * ```javascript\n     * import * as fs from \"node:fs/promises\";\n     * const table2 = await client.table(await fs.readFile(\"superstore.arrow\"));\n     * ```\n     *\n     * Load a CSV from a `UInt8Array` (the default for this type is Arrow)\n     * using a format override:\n     *\n     * ```javascript\n     * const enc = new TextEncoder();\n     * const table = await client.table(enc.encode(\"x,y\\n1,2\\n3,4\"), {\n     *     format: \"csv\",\n     * });\n     * ```\n     *\n     * Create a table with an `index`:\n     *\n     * ```javascript\n     * const table = await client.table(data, { index: \"Row ID\" });\n     * ```\n     * @param {string | ArrayBuffer | Record<string, unknown[]> | Record<string, unknown>[]} value\n     * @param {TableInitOptions | null} [options]\n     * @returns {Promise<Table>}\n     */\n    table(value, options) {\n        const ret = wasm.client_table(this.__wbg_ptr, addHeapObject(value), isLikeNone(options) ? 0 : addHeapObject(options));\n        return takeObject(ret);\n    }\n    /**\n     * Terminates this [`Client`], cleaning up any [`crate::View`] handles the\n     * [`Client`] has open as well as its callbacks.\n     * @returns {any}\n     */\n    terminate() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.client_terminate(retptr, this.__wbg_ptr);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            var r2 = getDataViewMemory0().getInt32(retptr + 4 * 2, true);\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n     * Opens a [`Table`] that is hosted on the `perspective_server::Server`\n     * that is connected to this [`Client`].\n     *\n     * The `name` property of [`TableInitOptions`] is used to identify each\n     * [`Table`]. [`Table`] `name`s can be looked up for each [`Client`]\n     * via [`Client::get_hosted_table_names`].\n     *\n     * # JavaScript Examples\n     *\n     * Get a virtual [`Table`] named \"table_one\" from this [`Client`]\n     *\n     * ```javascript\n     * const tables = await client.open_table(\"table_one\");\n     * ```\n     * @param {string} entity_id\n     * @returns {Promise<Table>}\n     */\n    open_table(entity_id) {\n        const ptr0 = passStringToWasm0(entity_id, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.client_open_table(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n     * Retrieves the names of all tables that this client has access to.\n     *\n     * `name` is a string identifier unique to the [`Table`] (per [`Client`]),\n     * which can be used in conjunction with [`Client::open_table`] to get\n     * a [`Table`] instance without the use of [`Client::table`]\n     * constructor directly (e.g., one created by another [`Client`]).\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * const tables = await client.get_hosted_table_names();\n     * ```\n     * @returns {Promise<any>}\n     */\n    get_hosted_table_names() {\n        const ret = wasm.client_get_hosted_table_names(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Register a callback which is invoked whenever [`Client::table`] (on this\n     * [`Client`]) or [`Table::delete`] (on a [`Table`] belinging to this\n     * [`Client`]) are called.\n     * @param {Function} on_update_js\n     * @returns {Promise<number>}\n     */\n    on_hosted_tables_update(on_update_js) {\n        const ret = wasm.client_on_hosted_tables_update(this.__wbg_ptr, addHeapObject(on_update_js));\n        return takeObject(ret);\n    }\n    /**\n     * Remove a callback previously registered via\n     * `Client::on_hosted_tables_update`.\n     * @param {number} update_id\n     * @returns {Promise<void>}\n     */\n    remove_hosted_tables_update(update_id) {\n        const ret = wasm.client_remove_hosted_tables_update(this.__wbg_ptr, update_id);\n        return takeObject(ret);\n    }\n    /**\n     * Provides the [`SystemInfo`] struct, implementation-specific metadata\n     * about the [`perspective_server::Server`] runtime such as Memory and\n     * CPU usage.\n     *\n     * For WebAssembly servers, this method includes the WebAssembly heap size.\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * const info = await client.system_info();\n     * ```\n     * @returns {Promise<SystemInfo>}\n     */\n    system_info() {\n        const ret = wasm.client_system_info(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n}\n\nconst ProxySessionFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_proxysession_free(ptr >>> 0, 1));\n\nexport class ProxySession {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(ProxySession.prototype);\n        obj.__wbg_ptr = ptr;\n        ProxySessionFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ProxySessionFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_proxysession_free(ptr, 0);\n    }\n    /**\n     * @param {Client} client\n     * @param {Function} on_response\n     */\n    constructor(client, on_response) {\n        try {\n            _assertClass(client, Client);\n            const ret = wasm.client_new_proxy_session(client.__wbg_ptr, addBorrowedObject(on_response));\n            this.__wbg_ptr = ret >>> 0;\n            ProxySessionFinalization.register(this, this.__wbg_ptr, this);\n            return this;\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n     * @param {any} value\n     * @returns {Promise<void>}\n     */\n    handle_request(value) {\n        const ret = wasm.proxysession_handle_request(this.__wbg_ptr, addHeapObject(value));\n        return takeObject(ret);\n    }\n    /**\n     * @returns {Promise<void>}\n     */\n    close() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm.proxysession_close(ptr);\n        return takeObject(ret);\n    }\n}\n\nconst TableFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_table_free(ptr >>> 0, 1));\n\nexport class Table {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Table.prototype);\n        obj.__wbg_ptr = ptr;\n        TableFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        TableFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_table_free(ptr, 0);\n    }\n    /**\n     * @returns {string}\n     */\n    __getClassname() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.table___getClassname(retptr, this.__wbg_ptr);\n            var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n            var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_export_3(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * Returns the name of the index column for the table.\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * const table = await client.table(\"x,y\\n1,2\\n3,4\", { index: \"x\" });\n     * const index = table.get_index(); // \"x\"\n     * ```\n     * @returns {Promise<string | undefined>}\n     */\n    get_index() {\n        const ret = wasm.table_get_index(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Get a copy of the [`Client`] this [`Table`] came from.\n     * @returns {Promise<Client>}\n     */\n    get_client() {\n        const ret = wasm.table_get_client(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Returns the user-specified name for this table, or the auto-generated\n     * name if a name was not specified when the table was created.\n     * @returns {Promise<string>}\n     */\n    get_name() {\n        const ret = wasm.table_get_name(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Returns the user-specified row limit for this table.\n     * @returns {Promise<number | undefined>}\n     */\n    get_limit() {\n        const ret = wasm.table_get_limit(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Removes all the rows in the [`Table`], but preserves everything else\n     * including the schema, index, and any callbacks or registered\n     * [`View`] instances.\n     *\n     * Calling [`Table::clear`], like [`Table::update`] and [`Table::remove`],\n     * will trigger an update event to any registered listeners via\n     * [`View::on_update`].\n     * @returns {Promise<void>}\n     */\n    clear() {\n        const ret = wasm.table_clear(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Delete this [`Table`] and cleans up associated resources.\n     *\n     * [`Table`]s do not stop consuming resources or processing updates when\n     * they are garbage collected in their host language - you must call\n     * this method to reclaim these.\n     *\n     * # Arguments\n     *\n     * - `options` An options dictionary.\n     *     - `lazy` Whether to delete this [`Table`] _lazily_. When false (the\n     *       default), the delete will occur immediately, assuming it has no\n     *       [`View`] instances registered to it (which must be deleted first,\n     *       otherwise this method will throw an error). When true, the\n     *       [`Table`] will only be marked for deltion once its [`View`]\n     *       dependency count reaches 0.\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * const table = await client.table(\"x,y\\n1,2\\n3,4\");\n     *\n     * // ...\n     *\n     * await table.delete({ lazy: true });\n     * ```\n     * @param {DeleteOptions | null} [options]\n     * @returns {Promise<void>}\n     */\n    delete(options) {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm.table_delete(ptr, isLikeNone(options) ? 0 : addHeapObject(options));\n        return takeObject(ret);\n    }\n    /**\n     * Returns the number of rows in a [`Table`].\n     * @returns {Promise<number>}\n     */\n    size() {\n        const ret = wasm.table_size(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Returns a table's [`Schema`], a mapping of column names to column types.\n     *\n     * The mapping of a [`Table`]'s column names to data types is referred to\n     * as a [`Schema`]. Each column has a unique name and a data type, one\n     * of:\n     *\n     * - `\"boolean\"` - A boolean type\n     * - `\"date\"` - A timesonze-agnostic date type (month/day/year)\n     * - `\"datetime\"` - A millisecond-precision datetime type in the UTC\n     *   timezone\n     * - `\"float\"` - A 64 bit float\n     * - `\"integer\"` - A signed 32 bit integer (the integer type supported by\n     *   JavaScript)\n     * - `\"string\"` - A [`String`] data type (encoded internally as a\n     *   _dictionary_)\n     *\n     * Note that all [`Table`] columns are _nullable_, regardless of the data\n     * type.\n     * @returns {Promise<any>}\n     */\n    schema() {\n        const ret = wasm.table_schema(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Returns the column names of this [`Table`] in \"natural\" order (the\n     * ordering implied by the input format).\n     *\n     *  # JavaScript Examples\n     *\n     *  ```javascript\n     *  const columns = await table.columns();\n     *  ```\n     * @returns {Promise<any>}\n     */\n    columns() {\n        const ret = wasm.table_columns(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Create a unique channel ID on this [`Table`], which allows\n     * `View::on_update` callback calls to be associated with the\n     * `Table::update` which caused them.\n     * @returns {Promise<number>}\n     */\n    make_port() {\n        const ret = wasm.table_make_port(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Register a callback which is called exactly once, when this [`Table`] is\n     * deleted with the [`Table::delete`] method.\n     *\n     * [`Table::on_delete`] resolves when the subscription message is sent, not\n     * when the _delete_ event occurs.\n     * @param {Function} on_delete\n     * @returns {Promise<any>}\n     */\n    on_delete(on_delete) {\n        const ret = wasm.table_on_delete(this.__wbg_ptr, addHeapObject(on_delete));\n        return takeObject(ret);\n    }\n    /**\n     * Removes a listener with a given ID, as returned by a previous call to\n     * [`Table::on_delete`].\n     * @param {number} callback_id\n     * @returns {Promise<any>}\n     */\n    remove_delete(callback_id) {\n        const ret = wasm.table_remove_delete(this.__wbg_ptr, callback_id);\n        return takeObject(ret);\n    }\n    /**\n     * Removes rows from this [`Table`] with the `index` column values\n     * supplied.\n     *\n     * # Arguments\n     *\n     * - `indices` - A list of `index` column values for rows that should be\n     *   removed.\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * await table.remove([1, 2, 3]);\n     * ```\n     * @param {any} value\n     * @param {UpdateOptions | null} [options]\n     * @returns {Promise<void>}\n     */\n    remove(value, options) {\n        const ret = wasm.table_remove(this.__wbg_ptr, addHeapObject(value), isLikeNone(options) ? 0 : addHeapObject(options));\n        return takeObject(ret);\n    }\n    /**\n     * Replace all rows in this [`Table`] with the input data, coerced to this\n     * [`Table`]'s existing [`perspective_client::Schema`], notifying any\n     * derived [`View`] and [`View::on_update`] callbacks.\n     *\n     * Calling [`Table::replace`] is an easy way to replace _all_ the data in a\n     * [`Table`] without losing any derived [`View`] instances or\n     * [`View::on_update`] callbacks. [`Table::replace`] does _not_ infer\n     * data types like [`Client::table`] does, rather it _coerces_ input\n     * data to the `Schema` like [`Table::update`]. If you need a [`Table`]\n     * with a different `Schema`, you must create a new one.\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * await table.replace(\"x,y\\n1,2\");\n     * ```\n     * @param {any} input\n     * @param {UpdateOptions | null} [options]\n     * @returns {Promise<void>}\n     */\n    replace(input, options) {\n        const ret = wasm.table_replace(this.__wbg_ptr, addHeapObject(input), isLikeNone(options) ? 0 : addHeapObject(options));\n        return takeObject(ret);\n    }\n    /**\n     * Updates the rows of this table and any derived [`View`] instances.\n     *\n     * Calling [`Table::update`] will trigger the [`View::on_update`] callbacks\n     * register to derived [`View`], and the call itself will not resolve until\n     * _all_ derived [`View`]'s are notified.\n     *\n     * When updating a [`Table`] with an `index`, [`Table::update`] supports\n     * partial updates, by omitting columns from the update data.\n     *\n     * # Arguments\n     *\n     * - `input` - The input data for this [`Table`]. The schema of a [`Table`]\n     *   is immutable after creation, so this method cannot be called with a\n     *   schema.\n     * - `options` - Options for this update step - see [`UpdateOptions`].\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * await table.update(\"x,y\\n1,2\");\n     * ```\n     * @param {string | ArrayBuffer | Record<string, unknown[]> | Record<string, unknown>[]} input\n     * @param {UpdateOptions | null} [options]\n     * @returns {Promise<any>}\n     */\n    update(input, options) {\n        const ret = wasm.table_update(this.__wbg_ptr, addHeapObject(input), isLikeNone(options) ? 0 : addHeapObject(options));\n        return takeObject(ret);\n    }\n    /**\n     * Create a new [`View`] from this table with a specified\n     * [`ViewConfigUpdate`].\n     *\n     * See [`View`] struct.\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * const view = await table.view({\n     *     columns: [\"Sales\"],\n     *     aggregates: { Sales: \"sum\" },\n     *     group_by: [\"Region\", \"Country\"],\n     *     filter: [[\"Category\", \"in\", [\"Furniture\", \"Technology\"]]],\n     * });\n     * ```\n     * @param {ViewConfigUpdate | null} [config]\n     * @returns {Promise<View>}\n     */\n    view(config) {\n        const ret = wasm.table_view(this.__wbg_ptr, isLikeNone(config) ? 0 : addHeapObject(config));\n        return takeObject(ret);\n    }\n    /**\n     * Validates the given expressions.\n     * @param {any} exprs\n     * @returns {Promise<any>}\n     */\n    validate_expressions(exprs) {\n        const ret = wasm.table_validate_expressions(this.__wbg_ptr, addHeapObject(exprs));\n        return takeObject(ret);\n    }\n}\n\nconst ViewFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_view_free(ptr >>> 0, 1));\n/**\n * The [`View`] struct is Perspective's query and serialization interface. It\n * represents a query on the `Table`'s dataset and is always created from an\n * existing `Table` instance via the [`Table::view`] method.\n *\n * [`View`]s are immutable with respect to the arguments provided to the\n * [`Table::view`] method; to change these parameters, you must create a new\n * [`View`] on the same [`Table`]. However, each [`View`] is _live_ with\n * respect to the [`Table`]'s data, and will (within a conflation window)\n * update with the latest state as its parent [`Table`] updates, including\n * incrementally recalculating all aggregates, pivots, filters, etc. [`View`]\n * query parameters are composable, in that each parameter works independently\n * _and_ in conjunction with each other, and there is no limit to the number of\n * pivots, filters, etc. which can be applied.\n */\nexport class View {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(View.prototype);\n        obj.__wbg_ptr = ptr;\n        ViewFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    static __unwrap(jsValue) {\n        if (!(jsValue instanceof View)) {\n            return 0;\n        }\n        return jsValue.__destroy_into_raw();\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ViewFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_view_free(ptr, 0);\n    }\n    /**\n     * @returns {View}\n     */\n    __get_model() {\n        const ret = wasm.view___get_model(this.__wbg_ptr);\n        return View.__wrap(ret);\n    }\n    /**\n     * Returns an array of strings containing the column paths of the [`View`]\n     * without any of the source columns.\n     *\n     * A column path shows the columns that a given cell belongs to after\n     * pivots are applied.\n     * @param {ColumnWindow | null} [window]\n     * @returns {Promise<any>}\n     */\n    column_paths(window) {\n        const ret = wasm.view_column_paths(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Delete this [`View`] and clean up all resources associated with it.\n     * [`View`] objects do not stop consuming resources or processing\n     * updates when they are garbage collected - you must call this method\n     * to reclaim these.\n     * @returns {Promise<void>}\n     */\n    delete() {\n        const ptr = this.__destroy_into_raw();\n        const ret = wasm.view_delete(ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Returns this [`View`]'s _dimensions_, row and column count, as well as\n     * those of the [`crate::Table`] from which it was derived.\n     *\n     * - `num_table_rows` - The number of rows in the underlying\n     *   [`crate::Table`].\n     * - `num_table_columns` - The number of columns in the underlying\n     *   [`crate::Table`] (including the `index` column if this\n     *   [`crate::Table`] was constructed with one).\n     * - `num_view_rows` - The number of rows in this [`View`]. If this\n     *   [`View`] has a `group_by` clause, `num_view_rows` will also include\n     *   aggregated rows.\n     * - `num_view_columns` - The number of columns in this [`View`]. If this\n     *   [`View`] has a `split_by` clause, `num_view_columns` will include all\n     *   _column paths_, e.g. the number of `columns` clause times the number\n     *   of `split_by` groups.\n     * @returns {Promise<any>}\n     */\n    dimensions() {\n        const ret = wasm.view_dimensions(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * The expression schema of this [`View`], which contains only the\n     * expressions created on this [`View`]. See [`View::schema`] for\n     * details.\n     * @returns {Promise<any>}\n     */\n    expression_schema() {\n        const ret = wasm.view_expression_schema(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * A copy of the config object passed to the [`Table::view`] method which\n     * created this [`View`].\n     * @returns {Promise<any>}\n     */\n    get_config() {\n        const ret = wasm.view_get_config(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Calculates the [min, max] of the leaf nodes of a column `column_name`.\n     *\n     * # Returns\n     *\n     * A tuple of [min, max], whose types are column and aggregate dependent.\n     * @param {string} name\n     * @returns {Promise<Array<any>>}\n     */\n    get_min_max(name) {\n        const ptr0 = passStringToWasm0(name, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.view_get_min_max(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n    /**\n     * The number of aggregated rows in this [`View`]. This is affected by the\n     * \"group_by\" configuration parameter supplied to this view's contructor.\n     *\n     * # Returns\n     *\n     * The number of aggregated rows.\n     * @returns {Promise<number>}\n     */\n    num_rows() {\n        const ret = wasm.view_num_rows(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * The schema of this [`View`].\n     *\n     * The [`View`] schema differs from the `schema` returned by\n     * [`Table::schema`]; it may have different column names due to\n     * `expressions` or `columns` configs, or it maye have _different\n     * column types_ due to the application og `group_by` and `aggregates`\n     * config. You can think of [`Table::schema`] as the _input_ schema and\n     * [`View::schema`] as the _output_ schema of a Perspective pipeline.\n     * @returns {Promise<any>}\n     */\n    schema() {\n        const ret = wasm.view_schema(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Serializes a [`View`] to the Apache Arrow data format.\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<ArrayBuffer>}\n     */\n    to_arrow(window) {\n        const ret = wasm.view_to_arrow(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Serializes this [`View`] to a string of JSON data. Useful if you want to\n     * save additional round trip serialize/deserialize cycles.\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<string>}\n     */\n    to_columns_string(window) {\n        const ret = wasm.view_to_columns_string(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Serializes this [`View`] to JavaScript objects in a column-oriented\n     * format.\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<object>}\n     */\n    to_columns(window) {\n        const ret = wasm.view_to_columns(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Render this `View` as a JSON string.\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<string>}\n     */\n    to_json_string(window) {\n        const ret = wasm.view_to_json_string(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Serializes this [`View`] to JavaScript objects in a row-oriented\n     * format.\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<Array<any>>}\n     */\n    to_json(window) {\n        const ret = wasm.view_to_json(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Renders this [`View`] as an [NDJSON](https://github.com/ndjson/ndjson-spec)\n     * formatted [`String`].\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<string>}\n     */\n    to_ndjson(window) {\n        const ret = wasm.view_to_ndjson(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Serializes this [`View`] to CSV data in a standard format.\n     * @param {ViewWindow | null} [window]\n     * @returns {Promise<string>}\n     */\n    to_csv(window) {\n        const ret = wasm.view_to_csv(this.__wbg_ptr, isLikeNone(window) ? 0 : addHeapObject(window));\n        return takeObject(ret);\n    }\n    /**\n     * Register a callback with this [`View`]. Whenever the view's underlying\n     * table emits an update, this callback will be invoked with an object\n     * containing `port_id`, indicating which port the update fired on, and\n     * optionally `delta`, which is the new data that was updated for each\n     * cell or each row.\n     *\n     * # Arguments\n     *\n     * - `on_update` - A callback function invoked on update, which receives an\n     *   object with two keys: `port_id`, indicating which port the update was\n     *   triggered on, and `delta`, whose value is dependent on the mode\n     *   parameter.\n     * - `options` - If this is provided as `OnUpdateOptions { mode:\n     *   Some(OnUpdateMode::Row) }`, then `delta` is an Arrow of the updated\n     *   rows. Otherwise `delta` will be [`Option::None`].\n     *\n     * # JavaScript Examples\n     *\n     * ```javascript\n     * // Attach an `on_update` callback\n     * view.on_update((updated) => console.log(updated.port_id));\n     * ```\n     *\n     * ```javascript\n     * // `on_update` with row deltas\n     * view.on_update((updated) => console.log(updated.delta), { mode: \"row\" });\n     * ```\n     * @param {Function} on_update_js\n     * @param {OnUpdateOptions | null} [options]\n     * @returns {Promise<any>}\n     */\n    on_update(on_update_js, options) {\n        const ret = wasm.view_on_update(this.__wbg_ptr, addHeapObject(on_update_js), isLikeNone(options) ? 0 : addHeapObject(options));\n        return takeObject(ret);\n    }\n    /**\n     * Unregister a previously registered update callback with this [`View`].\n     *\n     * # Arguments\n     *\n     * - `id` - A callback `id` as returned by a recipricol call to\n     *   [`View::on_update`].\n     * @param {number} callback_id\n     * @returns {Promise<void>}\n     */\n    remove_update(callback_id) {\n        const ret = wasm.view_remove_update(this.__wbg_ptr, callback_id);\n        return takeObject(ret);\n    }\n    /**\n     * Register a callback with this [`View`]. Whenever the [`View`] is\n     * deleted, this callback will be invoked.\n     * @param {Function} on_delete\n     * @returns {Promise<any>}\n     */\n    on_delete(on_delete) {\n        const ret = wasm.view_on_delete(this.__wbg_ptr, addHeapObject(on_delete));\n        return takeObject(ret);\n    }\n    /**\n     * The number of aggregated columns in this [`View`]. This is affected by\n     * the \"split_by\" configuration parameter supplied to this view's\n     * contructor.\n     *\n     * # Returns\n     *\n     * The number of aggregated columns.\n     * @returns {Promise<number>}\n     */\n    num_columns() {\n        const ret = wasm.view_num_columns(this.__wbg_ptr);\n        return takeObject(ret);\n    }\n    /**\n     * Unregister a previously registered [`View::on_delete`] callback.\n     * @param {number} callback_id\n     * @returns {Promise<any>}\n     */\n    remove_delete(callback_id) {\n        const ret = wasm.view_remove_delete(this.__wbg_ptr, callback_id);\n        return takeObject(ret);\n    }\n    /**\n     * Collapses the `group_by` row at `row_index`.\n     * @param {number} row_index\n     * @returns {Promise<number>}\n     */\n    collapse(row_index) {\n        const ret = wasm.view_collapse(this.__wbg_ptr, row_index);\n        return takeObject(ret);\n    }\n    /**\n     * Expand the `group_by` row at `row_index`.\n     * @param {number} row_index\n     * @returns {Promise<number>}\n     */\n    expand(row_index) {\n        const ret = wasm.view_expand(this.__wbg_ptr, row_index);\n        return takeObject(ret);\n    }\n    /**\n     * Set expansion `depth` of the `group_by` tree.\n     * @param {number} depth\n     * @returns {Promise<void>}\n     */\n    set_depth(depth) {\n        const ret = wasm.view_set_depth(this.__wbg_ptr, depth);\n        return takeObject(ret);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_at_7d852dd9f194d43e = function(arg0, arg1) {\n        const ret = getObject(arg0).at(arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_09165b52af8c5237 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_672a4d21634d4a24 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_7cccdd69e0791ae2 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_833bed5770ea2041 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_client_new = function(arg0) {\n        const ret = Client.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_debug_3cb59063b29f58c1 = function(arg0) {\n        console.debug(getObject(arg0));\n    };\n    imports.wbg.__wbg_debug_e17b51583ca6a632 = function(arg0, arg1, arg2, arg3) {\n        console.debug(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_done_769e5ede4b31c67b = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_entries_3265d4158b33e5dc = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_error_1004b8c64097413f = function(arg0, arg1) {\n        console.error(getObject(arg0), getObject(arg1));\n    };\n    imports.wbg.__wbg_error_524f506f44df1645 = function(arg0) {\n        console.error(getObject(arg0));\n    };\n    imports.wbg.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_export_3(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_error_80de38b3f7cc3c3c = function(arg0, arg1, arg2, arg3) {\n        console.error(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_from_2a5d3e218e67aa85 = function(arg0) {\n        const ret = Array.from(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getEntriesByName_2a5a14d4b09f36a4 = function(arg0, arg1, arg2, arg3, arg4) {\n        const ret = getObject(arg0).getEntriesByName(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_21a0191e74d0e1d3 = function() { return handleError(function (arg0, arg1) {\n        globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n    }, arguments) };\n    imports.wbg.__wbg_get_67b2ba62fc30de12 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_get_74b8744f6a23f4fa = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0)[getStringFromWasm0(arg1, arg2)];\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_b9b93047fe3cf45b = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getwithrefkey_1dc361bd10053bfe = function(arg0, arg1) {\n        const ret = getObject(arg0)[getObject(arg1)];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_has_a5ea9117f258a0ec = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.has(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_info_033d8b8a0838f1d3 = function(arg0, arg1, arg2, arg3) {\n        console.info(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_info_3daf2e093e091b66 = function(arg0) {\n        console.info(getObject(arg0));\n    };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_e14585432e3737fc = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Array_6ac07133d621675a = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Error_4d54113b22d20306 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Error;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Map_f3469ce2244d2430 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Map;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Object_7f2dcef8f78644a4 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Object;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_17156bcf118086a9 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Window_def73ea0955fc569 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_a1eab7e0d067391b = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_isSafeInteger_343e2beeeece1bb0 = function(arg0) {\n        const ret = Number.isSafeInteger(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_iterator_9a24c88df860dc65 = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_keys_5c77a08ddc2fb8a6 = function(arg0) {\n        const ret = Object.keys(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_a446193dc22c12f8 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_length_e2d2a49132c1b256 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_mark_001da84b098c950f = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).mark(getStringFromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_measure_65e49f8bc0e203a8 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).measure(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_message_97a2af9b89d693a3 = function(arg0) {\n        const ret = getObject(arg0).message;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_23a2665fac83c611 = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_251(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_new_405e22f390576ce2 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_5e0be73521bc8c17 = function() {\n        const ret = new Map();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_78feb108b6472713 = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8a6f238a6ece86ea = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_a12002a7f91c75be = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_c68d7209be747379 = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_105ed471475aaf50 = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_25feadfc0913fea9 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_6574e1a8a62d1055 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_now_d18023d54d4e5500 = function(arg0) {\n        const ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_parse_def2e24ef1252aff = function() { return handleError(function (arg0, arg1) {\n        const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_performance_c185c0cdc2766575 = function(arg0) {\n        const ret = getObject(arg0).performance;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_push_737cfc8c1432c2c6 = function(arg0, arg1) {\n        const ret = getObject(arg0).push(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_queueMicrotask_6808622725a52272 = function(arg0) {\n        const ret = getObject(arg0).queueMicrotask;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_queueMicrotask_ef0e86b0263a71ee = function(arg0) {\n        queueMicrotask(getObject(arg0));\n    };\n    imports.wbg.__wbg_reject_b3fcf99063186ff7 = function(arg0) {\n        const ret = Promise.reject(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_resolve_4851785c9c5f573d = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_37837023f3d740e8 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_set_65595bdd868b3009 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_set_8fc6bf8a5b1071d1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).set(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_startTime_c051731d0a31602f = function(arg0) {\n        const ret = getObject(arg0).startTime;\n        return ret;\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_88a902d13a557d07 = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_37c5d418e4bf5819 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_5de37043a91a9c40 = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stringify_f7ed6987935b4a24 = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_table_new = function(arg0) {\n        const ret = Table.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_44b73946d2fb3e7d = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_48b406749878a531 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_toString_5285597960676b7b = function(arg0) {\n        const ret = getObject(arg0).toString();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_trace_d12a9ac890a2cbb8 = function(arg0, arg1, arg2, arg3) {\n        console.trace(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbg_trace_e758b839df8d34f1 = function(arg0) {\n        console.trace(getObject(arg0));\n    };\n    imports.wbg.__wbg_value_cd1ffa7b1ab794f1 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_values_fcb8ba8c0aad8b58 = function(arg0) {\n        const ret = Object.values(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_view_new = function(arg0) {\n        const ret = View.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_view_unwrap = function(arg0) {\n        const ret = View.__unwrap(takeObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_warn_4ca3906c248c47c4 = function(arg0) {\n        console.warn(getObject(arg0));\n    };\n    imports.wbg.__wbg_warn_aaf1f4664a035bd6 = function(arg0, arg1, arg2, arg3) {\n        console.warn(getObject(arg0), getObject(arg1), getObject(arg2), getObject(arg3));\n    };\n    imports.wbg.__wbindgen_as_number = function(arg0) {\n        const ret = +getObject(arg0);\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n        const v = getObject(arg1);\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getDataViewMemory0().setBigInt64(arg0 + 8 * 1, isLikeNone(ret) ? BigInt(0) : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbindgen_closure_wrapper3224 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 468, __wbg_adapter_53);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper367 = function(arg0, arg1, arg2) {\n        const ret = makeClosure(arg0, arg1, 7, __wbg_adapter_50);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_in = function(arg0, arg1) {\n        const ret = getObject(arg0) in getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_bigint = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) === getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getDataViewMemory0().setFloat64(arg0 + 8 * 1, isLikeNone(ret) ? 0 : ret, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, !isLikeNone(ret), true);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_export_0, wasm.__wbindgen_export_1);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\n// @ts-ignore\nimport { extract } from \"pro_self_extracting_wasm\";\n\nif (typeof WebAssembly === \"undefined\") {\n    throw new Error(\"WebAssembly not supported.\");\n}\n\ninterface Module extends WebAssembly.Exports {\n    size(): number;\n    offset(): number;\n    memory: WebAssembly.Memory;\n}\n\n// Perform a silly dance to deal with the different ways webpack and esbuild\n// load binary, as this may either be an `ArrayBuffer` or `URL` depending\n// on whether `inline` option was specified to `perspective-esbuild-plugin`.\nasync function compile(\n    buffer: ArrayBuffer | Response | WebAssembly.Module | WebAssembly.Exports\n): Promise<Module> {\n    if (buffer instanceof Response) {\n        return (await WebAssembly.instantiateStreaming(buffer)).instance\n            .exports as Module;\n    } else if (buffer instanceof WebAssembly.Module) {\n        return (await WebAssembly.instantiate(buffer)).exports as Module;\n    } else if (buffer instanceof WebAssembly.Instance) {\n        return buffer.exports as Module;\n    } else if (buffer instanceof ArrayBuffer) {\n        return (await WebAssembly.instantiate(buffer as BufferSource)).instance\n            .exports as Module;\n    } else {\n        return buffer as Module;\n    }\n}\n\nexport async function load_wasm_stage_0(\n    wasm:\n        | ArrayBuffer\n        | Response\n        | WebAssembly.Module\n        | (() => Promise<ArrayBuffer>)\n): Promise<Uint8Array> {\n    if (wasm instanceof Function) {\n        wasm = await wasm();\n    }\n\n    try {\n        return await extract(wasm as ArrayBuffer);\n    } catch (e) {\n        console.warn(\"Stage 0 wasm loading failed, skipping\");\n        return new Uint8Array(wasm as ArrayBuffer);\n    }\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport type { MainModule } from \"../../../dist/wasm/perspective-server.js\";\nimport type { EmscriptenServer, PspPtr } from \"./emscripten_api.ts\";\n\nexport type ApiResponse = {\n    client_id: number;\n    data: Uint8Array;\n};\n\nexport interface PerspectiveServerOptions {\n    on_poll_request?: (x: PerspectiveServer) => Promise<void>;\n}\n\nexport class PerspectivePollThread {\n    private poll_handle?: Promise<void>;\n    private server: PerspectiveServer;\n    constructor(server: PerspectiveServer) {\n        this.server = server;\n    }\n\n    private set_poll_handle() {\n        this.poll_handle = new Promise((resolve, reject) =>\n            setTimeout(() =>\n                this.server\n                    .poll()\n                    .then(resolve)\n                    .catch(reject)\n                    .finally(() => {\n                        this.poll_handle = undefined;\n                    })\n            )\n        );\n\n        return this.poll_handle;\n    }\n\n    async on_poll_request() {\n        if (!this.poll_handle) {\n            await this.set_poll_handle();\n        } else {\n            await this.poll_handle.then(() => {\n                if (!this.poll_handle) {\n                    return this.set_poll_handle();\n                }\n            });\n        }\n    }\n}\n\nexport class PerspectiveServer {\n    clients: Map<number, (buffer: Uint8Array) => Promise<void>>;\n    server: EmscriptenServer;\n    module: MainModule;\n    on_poll_request?: (x: PerspectiveServer) => Promise<void>;\n    constructor(module: MainModule, options?: PerspectiveServerOptions) {\n        this.clients = new Map();\n        this.module = module;\n        this.on_poll_request = options?.on_poll_request;\n        this.server = module._psp_new_server(\n            !!options?.on_poll_request ? 1 : 0\n        ) as EmscriptenServer;\n    }\n\n    /**\n     * Helper function to create server emitter/receiver pairs\n     */\n    make_session(\n        callback: (buffer: Uint8Array) => Promise<void>\n    ): PerspectiveSession {\n        const client_id = this.module._psp_new_session(this.server as any);\n        this.clients.set(client_id, callback);\n        return new PerspectiveSession(\n            this.module,\n            this.server,\n            client_id,\n            this.clients,\n            this.on_poll_request && (() => this.on_poll_request!(this))\n        );\n    }\n\n    async poll() {\n        const polled = this.module._psp_poll(this.server as any);\n        await decode_api_responses(\n            this.module,\n            polled,\n            async (msg: ApiResponse) => {\n                await this.clients.get(msg.client_id)!(msg.data);\n            }\n        );\n    }\n\n    delete() {\n        this.module._psp_delete_server(this.server as any);\n    }\n}\n\nexport class PerspectiveSession {\n    constructor(\n        private mod: MainModule,\n        private server: EmscriptenServer,\n        private client_id: number,\n        private client_map: Map<number, (buffer: Uint8Array) => Promise<void>>,\n        private on_poll_request?: () => Promise<void>\n    ) {}\n\n    async handle_request(view: Uint8Array) {\n        const ptr = await convert_typed_array_to_pointer(\n            this.mod,\n            view,\n            async (viewPtr) => {\n                return this.mod._psp_handle_request(\n                    this.server as any,\n                    this.client_id,\n                    viewPtr as any,\n                    this.mod._psp_is_memory64()\n                        ? (BigInt(view.byteLength) as any as number)\n                        : (view.byteLength as any)\n                );\n            }\n        );\n\n        await decode_api_responses(this.mod, ptr, async (msg: ApiResponse) => {\n            await this.client_map.get(msg.client_id)!(msg.data);\n        });\n\n        if (this.on_poll_request) {\n            await this.on_poll_request();\n        } else {\n            await this.poll();\n        }\n    }\n\n    private async poll() {\n        const polled = this.mod._psp_poll(this.server as any);\n        await decode_api_responses(\n            this.mod,\n            polled,\n            async (msg: ApiResponse) => {\n                if (msg.client_id === 0) {\n                    await this.client_map.get(this.client_id)!(msg.data);\n                } else {\n                    await this.client_map.get(msg.client_id)!(msg.data);\n                }\n            }\n        );\n    }\n\n    close() {\n        this.mod._psp_close_session(this.server as any, this.client_id);\n    }\n}\n\nasync function convert_typed_array_to_pointer(\n    core: MainModule,\n    array: Uint8Array,\n    callback: (_: PspPtr) => Promise<PspPtr>\n): Promise<PspPtr> {\n    const ptr = core._psp_alloc(\n        core._psp_is_memory64()\n            ? (BigInt(array.byteLength) as any as number)\n            : (array.byteLength as any)\n    );\n\n    core.HEAPU8.set(array, Number(ptr));\n    const msg = await callback(ptr);\n    core._psp_free(ptr);\n    return msg;\n}\n\n/**\n * Convert a pointer to WASM memory into an `ApiResponse[]`, via a custom\n * encoding.\n *\n * @param core The emscripten API\n * @param ptr A pointer to a fixed-sized struct representing a set of\n * `proto::Resp` payloads, encoded as a length-prefixed array of\n * (char* data, u32_t len, u32_t client_id) tuples:\n *\n * ```text\n *   N   data    length   client_id   data    length   client_id\n * +-------------------------------------------------------------+\n * | 2 | 0xabc | 9      | 0         | 0xdef | 12     | 0         |\n * +-------------------------------------------------------------+\n *       |                           |\n *       |  +-------------+          |  +----------------+\n *       +--| \"Test Data\" |          +--| \"Hello, World\" |\n *          +-------------+             +----------------+\n * ```\n *\n * @param callback A callback to which is passed the responses. THe responses\n * must be fully processed or copied before the callback returns, as it\n * references memory on the wasm stack.\n */\nasync function decode_api_responses(\n    core: MainModule,\n    ptr: PspPtr,\n    callback: (_: ApiResponse) => Promise<void>\n) {\n    const is_64 = core._psp_is_memory64();\n    const response = new DataView(\n        core.HEAPU8.buffer,\n        Number(ptr),\n        is_64 ? 12 : 8\n    );\n\n    const num_msgs = response.getUint32(0, true);\n    const msgs_ptr = is_64\n        ? response.getBigInt64(4, true)\n        : response.getUint32(4, true);\n\n    const messages = new DataView(\n        core.HEAPU8.buffer,\n        Number(msgs_ptr),\n        num_msgs * (is_64 ? 16 : 12)\n    );\n\n    try {\n        for (let i = 0; i < num_msgs; i++) {\n            const [data_ptr, data_len, client_id] = is_64\n                ? [\n                      messages.getBigInt64(i * 16, true),\n                      messages.getInt32(i * 16 + 8, true),\n                      messages.getInt32(i * 16 + 12, true),\n                  ]\n                : [\n                      messages.getInt32(i * 12, true),\n                      messages.getInt32(i * 12 + 4, true),\n                      messages.getInt32(i * 12 + 8, true),\n                  ];\n\n            const data = new Uint8Array(\n                core.HEAPU8.buffer,\n                Number(data_ptr),\n                data_len\n            );\n\n            const resp = { client_id, data };\n            await callback(resp);\n        }\n    } finally {\n        for (let i = 0; i < num_msgs; i++) {\n            const data_ptr = is_64\n                ? messages.getBigInt64(i * 16, true)\n                : messages.getInt32(i * 12, true);\n\n            core._psp_free(data_ptr as any);\n        }\n\n        core._psp_free(\n            is_64\n                ? (BigInt(messages.byteOffset) as any as number)\n                : (messages.byteOffset as any)\n        );\n        core._psp_free(\n            is_64\n                ? (BigInt(response.byteOffset) as any as number)\n                : (response.byteOffset as any)\n        );\n    }\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport type * as perspective_server from \"../../../dist/wasm/perspective-server.js\";\n\ntype PspPtr = bigint | number;\ntype EmscriptenServer = number;\n\nvar out = console.log.bind(console);\nvar err = console.error.bind(console);\n\nvar UTF8Decoder = new TextDecoder(\"utf8\");\nvar printCharBuffers: Array<Array<number> | null> = [null, [], []];\n\nfunction UTF8ArrayToString(\n    heapOrArray: Uint8Array | Array<number>,\n    idx = 0,\n    maxBytesToRead = NaN\n) {\n    var endIdx = idx + maxBytesToRead;\n    var endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    return UTF8Decoder.decode(\n        heapOrArray instanceof Uint8Array\n            ? heapOrArray.subarray(idx, endPtr)\n            : new Uint8Array(heapOrArray.slice(idx, endPtr))\n    );\n}\n\nfunction printChar(stream: number, curr: number) {\n    var buffer: Array<number> = printCharBuffers[stream]!;\n    if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n    } else {\n        buffer.push(curr);\n    }\n}\n\nexport default async function (obj: any) {\n    let psp_module: perspective_server.MainModule;\n    let is_memory64 = false;\n    let wasm_memory: WebAssembly.Memory;\n    const module = {\n        HaveOffsetConverter() {\n            console.error(\"HaveOffsetConverter\");\n        },\n        __syscall_ftruncate64(...args: any[]) {\n            console.error(\"__syscall_frtuncate64\", args);\n        },\n        __syscall_getdents64(...args: any[]) {\n            console.error(\"__syscall_frtuncate64\", args);\n        },\n        __syscall_unlinkat(...args: any[]) {\n            console.error(\"__syscall_frtuncate64\", args);\n        },\n        __throw_exception_with_stack_trace(ex: number) {\n            // @ts-ignore\n            const e = new WebAssembly.Exception(\n                (psp_module as any).__cpp_exception,\n                [ex],\n                {\n                    traceStack: true,\n                }\n            );\n\n            // e.message = getExceptionMessage(e);\n            e.message = \"Unexpected internal error\";\n            throw e;\n        },\n        clock_time_get(\n            clk_id: number,\n            ignored_precision: bigint,\n            ptime: bigint | number\n        ) {\n            if (is_memory64) {\n                ptime = ptime as bigint;\n                ptime = Number(ptime);\n                if (\n                    !(clk_id == 0 || clk_id == 1 || clk_id == 2 || clk_id == 3)\n                ) {\n                    return 28;\n                }\n                var now;\n\n                if (clk_id === 0) {\n                    now = Date.now();\n                } else {\n                    now = performance.now();\n                }\n\n                const nsec = Math.round(now * 1000 * 1000);\n                const HEAP64 = new BigInt64Array(wasm_memory.buffer);\n                HEAP64[ptime / 8] = BigInt(nsec);\n                return 0;\n            } else {\n                ptime = ptime as number;\n                ptime >>>= 0;\n                if (\n                    !(clk_id == 0 || clk_id == 1 || clk_id == 2 || clk_id == 3)\n                ) {\n                    return 28;\n                }\n\n                var now;\n                if (clk_id === 0) {\n                    now = Date.now();\n                } else {\n                    now = performance.now();\n                }\n\n                var nsec = Math.round(now * 1e6);\n                const HEAP64 = new BigInt64Array(wasm_memory.buffer);\n                HEAP64[ptime >>> 3] = BigInt(nsec);\n                return 0;\n            }\n        },\n        emscripten_asm_const_int(...args: any[]) {\n            return 0;\n        },\n        emscripten_notify_memory_growth(memoryIndex: bigint | number) {\n            if (is_memory64) {\n                memoryIndex = Number(memoryIndex as bigint);\n            } else {\n                memoryIndex = memoryIndex as number;\n                memoryIndex >>>= 0;\n            }\n\n            if (memoryIndex != 0) {\n                console.error(\"abort\");\n            }\n        },\n        environ_get(...args: any[]) {\n            return 0;\n        },\n        environ_sizes_get(...args: any[]) {\n            return 0;\n        },\n        fd_close(...args: any[]) {\n            console.error(\"fd_close\", args);\n            return 0;\n        },\n        fd_read(...args: any[]) {\n            console.error(\"fd_read\", args);\n            return 0;\n        },\n        fd_seek(...args: any[]) {\n            console.error(\"fs_seek\", args);\n            return 0;\n        },\n        fd_write(\n            fd: number,\n            iov: number | bigint,\n            iovcnt: number | bigint,\n            pnum: number | bigint\n        ) {\n            const HEAPU8 = new Uint8Array(wasm_memory.buffer);\n\n            if (!is_memory64) {\n                iov = iov as number;\n                iovcnt = iovcnt as number;\n                pnum = pnum as number;\n                iov >>>= 0;\n                iovcnt >>>= 0;\n                pnum >>>= 0;\n                let num = 0;\n                const HEAPU32 = new Uint32Array(wasm_memory.buffer);\n\n                for (let i = 0; i < iovcnt; i++) {\n                    let ptr = HEAPU32[(iov >>> 2) >>> 0];\n                    let len = HEAPU32[((iov + 4) >>> 2) >>> 0];\n                    iov += 8;\n                    for (let j = 0; j < len; j++) {\n                        printChar(fd, HEAPU8[(ptr + j) >>> 0]);\n                    }\n                    num += len;\n                }\n                HEAPU32[(pnum >>> 2) >>> 0] = num;\n                return 0;\n            } else {\n                iov = Number(iov as bigint);\n                iovcnt = Number(iovcnt as bigint);\n                pnum = Number(pnum as bigint);\n                let num = 0;\n                const HEAPU64 = new BigUint64Array(wasm_memory.buffer);\n\n                for (let i = 0; i < iovcnt; i++) {\n                    let ptr = Number(HEAPU64[iov / 8]);\n                    let len = Number(HEAPU64[(iov + 8) / 8]);\n                    iov += 16;\n                    for (let j = 0; j < len; j++) {\n                        printChar(fd, HEAPU8[ptr + j]);\n                    }\n\n                    num += len;\n                }\n                HEAPU64[pnum / 8] = BigInt(num);\n                return 0;\n            }\n        },\n        proc_exit(e: number) {\n            console.error(\"proc_exit\", e);\n            return 0;\n        },\n    };\n\n    const x = await obj.instantiateWasm(\n        { env: module, wasi_snapshot_preview1: module },\n        (instance: WebAssembly.Instance) => {\n            psp_module =\n                instance.exports as any as perspective_server.MainModule;\n\n            // @ts-ignore\n            is_memory64 = !!psp_module.psp_is_memory64();\n            wasm_memory = instance.exports.memory as WebAssembly.Memory;\n\n            // @ts-ignore\n            psp_module._initialize();\n        }\n    );\n\n    const extensions: Record<string, any> = {};\n    for (const [name, func] of Object.entries(x)) {\n        extensions[`_${name}`] = func;\n    }\n\n    return {\n        ...x,\n        ...extensions,\n        get HEAPU8() {\n            // @ts-ignore\n            return new Uint8Array(wasm_memory.buffer);\n        },\n    };\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport * as perspective_server from \"./perspective-server.poly.ts\";\nexport type * from \"../../../dist/wasm/perspective-js.js\";\nimport type * as perspective_server_t from \"../../../dist/wasm/perspective-server.js\";\n\nexport type PspPtr = BigInt | number;\nexport type EmscriptenServer = bigint | number;\n\nexport async function compile_perspective(\n    wasmBinary: ArrayBuffer\n): Promise<perspective_server_t.MainModule> {\n    const module = await perspective_server.default({\n        locateFile(x: any) {\n            return x;\n        },\n        instantiateWasm: async (\n            imports: any,\n            receive: (_: WebAssembly.Instance) => void\n        ) => {\n            imports[\"env\"] = {\n                ...imports[\"env\"],\n                psp_stack_trace() {\n                    const str = Error().stack || \"\";\n                    const textEncoder = new TextEncoder();\n                    const bytes = textEncoder.encode(str);\n                    const ptr = module._psp_alloc(\n                        module._psp_is_memory64()\n                            ? (BigInt(bytes.byteLength + 1) as any as number)\n                            : bytes.byteLength + 1\n                    );\n\n                    module.HEAPU8.set(bytes, Number(ptr));\n                    module.HEAPU8[Number(ptr) + bytes.byteLength] = 0;\n                    return ptr;\n                },\n                psp_heap_size() {\n                    if (module._psp_is_memory64()) {\n                        return BigInt(module.HEAPU8.buffer.byteLength);\n                    } else {\n                        return module.HEAPU8.buffer.byteLength;\n                    }\n                },\n            };\n\n            const webasm = await WebAssembly.instantiate(wasmBinary, imports);\n            receive(webasm.instance);\n            return webasm.instance.exports;\n        },\n    });\n\n    return module;\n}\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport type * as perspective_client from \"../../dist/wasm/perspective-js.js\";\n\nfunction invert_promise<T>(): [(t: T) => void, Promise<T>, (t: any) => void] {\n    let sender: ((t: T) => void) | undefined = undefined,\n        reject: ((t: any) => void) | undefined = undefined;\n    let receiver: Promise<T> = new Promise((x, u) => {\n        sender = x;\n        reject = u;\n    });\n\n    return [sender!, receiver, reject!];\n}\n\nexport async function websocket(\n    WebSocket: typeof window.WebSocket,\n    Client: typeof perspective_client.Client,\n    url: string | URL,\n    options?: { maxPayload: number }\n): Promise<perspective_client.Client> {\n    let client: perspective_client.Client, ws: WebSocket;\n\n    async function connect() {\n        if (\n            ws?.readyState === WebSocket.CONNECTING ||\n            ws?.readyState === WebSocket.OPEN\n        ) {\n            console.warn(`Already connected ${ws.readyState}`);\n            return;\n        }\n\n        let [sender, receiver, reject] = invert_promise();\n\n        // @ts-ignore\n        ws = new WebSocket(url, options);\n        ws.onopen = sender;\n        ws.binaryType = \"arraybuffer\";\n        ws.onerror = (event) => {\n            // @ts-expect-error\n            const msg = event.message || \"Generic Websocket Error\";\n            client.handle_error(msg, connect);\n            reject(msg);\n        };\n\n        ws.onclose = (event) => {\n            // https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1\n            const msg = `WebSocket closed ${event.code}`;\n            client.handle_error(msg, connect);\n            reject(msg);\n        };\n\n        ws.onmessage = (event) => {\n            client.handle_response(event.data);\n        };\n\n        await receiver;\n    }\n\n    async function send_message(proto: Uint8Array) {\n        if (\n            ws.readyState === WebSocket.CLOSING ||\n            ws.readyState === WebSocket.CLOSED\n        ) {\n            const msg = `WebSocket transport error (${ws.readyState})`;\n            client.handle_error(msg, connect);\n            throw new Error(msg);\n        } else if (ws.readyState === WebSocket.CONNECTING) {\n            const msg = `WebSocket message dropped (${ws.readyState})`;\n            throw new Error(msg);\n        } else {\n            const buffer = proto.slice().buffer;\n            ws.send(buffer);\n        }\n    }\n\n    async function on_close() {\n        console.debug(\"Closing WebSocket\");\n        ws.close();\n    }\n\n    client = new Client(send_message, on_close);\n    await connect();\n    return client;\n}\n"],
  "mappings": "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",
  "names": ["ptr", "window", "arg0", "arg1", "wasm", "nsec", "WebSocket", "Client", "url", "PerspectiveServer", "url", "websocket", "url"]
}
