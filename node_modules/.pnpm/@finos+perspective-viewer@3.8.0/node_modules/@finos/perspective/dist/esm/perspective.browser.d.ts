export type * from "../../dist/wasm/perspective-js.d.ts";
import type * as psp from "../../dist/wasm/perspective-js.d.ts";
export declare function init_server(wasm: Uint8Array | Promise<ArrayBuffer | Response | WebAssembly.Module> | ArrayBuffer | Response | WebAssembly.Module, disable_stage_0?: boolean): void;
export type PerspectiveWasm = ArrayBuffer | Response | typeof psp | Promise<ArrayBuffer | Response | Object>;
export declare function init_client(wasm: PerspectiveWasm, disable_stage_0?: boolean): void;
export declare function websocket(url: string | URL): Promise<psp.Client>;
export declare function worker(worker?: Promise<SharedWorker | ServiceWorker | Worker>): Promise<psp.Client>;
declare const _default: {
    websocket: typeof websocket;
    worker: typeof worker;
    init_client: typeof init_client;
    init_server: typeof init_server;
};
export default _default;
