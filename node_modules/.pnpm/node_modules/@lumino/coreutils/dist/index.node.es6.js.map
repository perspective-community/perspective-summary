{"version":3,"file":"index.node.es6.js","sources":["../src/json.ts","../src/mime.ts","../src/plugins.ts","../src/promise.ts","../src/token.ts","../src/random.ts","../src/random.node.ts","../src/uuid.ts","../src/uuid.node.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A type alias for a JSON primitive.\n */\nexport type JSONPrimitive = boolean | number | string | null;\n\n/**\n * A type alias for a JSON value.\n */\nexport type JSONValue = JSONPrimitive | JSONObject | JSONArray;\n\n/**\n * A type definition for a JSON object.\n */\nexport interface JSONObject {\n  [key: string]: JSONValue;\n}\n\n/**\n * A type definition for a JSON array.\n */\nexport interface JSONArray extends Array<JSONValue> {}\n\n/**\n * A type definition for a readonly JSON object.\n */\nexport interface ReadonlyJSONObject {\n  readonly [key: string]: ReadonlyJSONValue;\n}\n\n/**\n * A type definition for a readonly JSON array.\n */\nexport interface ReadonlyJSONArray extends ReadonlyArray<ReadonlyJSONValue> {}\n\n/**\n * A type alias for a readonly JSON value.\n */\nexport type ReadonlyJSONValue =\n  | JSONPrimitive\n  | ReadonlyJSONObject\n  | ReadonlyJSONArray;\n\n/**\n * A type alias for a partial JSON value.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport type PartialJSONValue =\n  | JSONPrimitive\n  | PartialJSONObject\n  | PartialJSONArray;\n\n/**\n * A type definition for a partial JSON object.\n *\n * Note: Partial here means that the JSON object attributes can be `undefined`.\n */\nexport interface PartialJSONObject {\n  [key: string]: PartialJSONValue | undefined;\n}\n\n/**\n * A type definition for a partial JSON array.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport interface PartialJSONArray extends Array<PartialJSONValue> {}\n\n/**\n * A type definition for a readonly partial JSON object.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport interface ReadonlyPartialJSONObject {\n  readonly [key: string]: ReadonlyPartialJSONValue | undefined;\n}\n\n/**\n * A type definition for a readonly partial JSON array.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport interface ReadonlyPartialJSONArray\n  extends ReadonlyArray<ReadonlyPartialJSONValue> {}\n\n/**\n * A type alias for a readonly partial JSON value.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport type ReadonlyPartialJSONValue =\n  | JSONPrimitive\n  | ReadonlyPartialJSONObject\n  | ReadonlyPartialJSONArray;\n\n/**\n * The namespace for JSON-specific functions.\n */\nexport namespace JSONExt {\n  /**\n   * A shared frozen empty JSONObject\n   */\n  export const emptyObject = Object.freeze({}) as ReadonlyJSONObject;\n\n  /**\n   * A shared frozen empty JSONArray\n   */\n  export const emptyArray = Object.freeze([]) as ReadonlyJSONArray;\n\n  /**\n   * Test whether a JSON value is a primitive.\n   *\n   * @param value - The JSON value of interest.\n   *\n   * @returns `true` if the value is a primitive,`false` otherwise.\n   */\n  export function isPrimitive(\n    value: ReadonlyPartialJSONValue\n  ): value is JSONPrimitive {\n    return (\n      value === null ||\n      typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string'\n    );\n  }\n\n  /**\n   * Test whether a JSON value is an array.\n   *\n   * @param value - The JSON value of interest.\n   *\n   * @returns `true` if the value is a an array, `false` otherwise.\n   */\n  export function isArray(value: JSONValue): value is JSONArray;\n  export function isArray(value: ReadonlyJSONValue): value is ReadonlyJSONArray;\n  export function isArray(value: PartialJSONValue): value is PartialJSONArray;\n  export function isArray(\n    value: ReadonlyPartialJSONValue\n  ): value is ReadonlyPartialJSONArray;\n  export function isArray(value: ReadonlyPartialJSONValue): boolean {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Test whether a JSON value is an object.\n   *\n   * @param value - The JSON value of interest.\n   *\n   * @returns `true` if the value is a an object, `false` otherwise.\n   */\n  export function isObject(value: JSONValue): value is JSONObject;\n  export function isObject(\n    value: ReadonlyJSONValue\n  ): value is ReadonlyJSONObject;\n  export function isObject(value: PartialJSONValue): value is PartialJSONObject;\n  export function isObject(\n    value: ReadonlyPartialJSONValue\n  ): value is ReadonlyPartialJSONObject;\n  export function isObject(value: ReadonlyPartialJSONValue): boolean {\n    return !isPrimitive(value) && !isArray(value);\n  }\n\n  /**\n   * Compare two JSON values for deep equality.\n   *\n   * @param first - The first JSON value of interest.\n   *\n   * @param second - The second JSON value of interest.\n   *\n   * @returns `true` if the values are equivalent, `false` otherwise.\n   */\n  export function deepEqual(\n    first: ReadonlyPartialJSONValue,\n    second: ReadonlyPartialJSONValue\n  ): boolean {\n    // Check referential and primitive equality first.\n    if (first === second) {\n      return true;\n    }\n\n    // If one is a primitive, the `===` check ruled out the other.\n    if (isPrimitive(first) || isPrimitive(second)) {\n      return false;\n    }\n\n    // Test whether they are arrays.\n    let a1 = isArray(first);\n    let a2 = isArray(second);\n\n    // Bail if the types are different.\n    if (a1 !== a2) {\n      return false;\n    }\n\n    // If they are both arrays, compare them.\n    if (a1 && a2) {\n      return deepArrayEqual(\n        first as ReadonlyPartialJSONArray,\n        second as ReadonlyPartialJSONArray\n      );\n    }\n\n    // At this point, they must both be objects.\n    return deepObjectEqual(\n      first as ReadonlyPartialJSONObject,\n      second as ReadonlyPartialJSONObject\n    );\n  }\n\n  /**\n   * Create a deep copy of a JSON value.\n   *\n   * @param value - The JSON value to copy.\n   *\n   * @returns A deep copy of the given JSON value.\n   */\n  export function deepCopy<T extends ReadonlyPartialJSONValue>(value: T): T {\n    // Do nothing for primitive values.\n    if (isPrimitive(value)) {\n      return value;\n    }\n\n    // Deep copy an array.\n    if (isArray(value)) {\n      return deepArrayCopy(value);\n    }\n\n    // Deep copy an object.\n    return deepObjectCopy(value);\n  }\n\n  /**\n   * Compare two JSON arrays for deep equality.\n   */\n  function deepArrayEqual(\n    first: ReadonlyPartialJSONArray,\n    second: ReadonlyPartialJSONArray\n  ): boolean {\n    // Check referential equality first.\n    if (first === second) {\n      return true;\n    }\n\n    // Test the arrays for equal length.\n    if (first.length !== second.length) {\n      return false;\n    }\n\n    // Compare the values for equality.\n    for (let i = 0, n = first.length; i < n; ++i) {\n      if (!deepEqual(first[i], second[i])) {\n        return false;\n      }\n    }\n\n    // At this point, the arrays are equal.\n    return true;\n  }\n\n  /**\n   * Compare two JSON objects for deep equality.\n   */\n  function deepObjectEqual(\n    first: ReadonlyPartialJSONObject,\n    second: ReadonlyPartialJSONObject\n  ): boolean {\n    // Check referential equality first.\n    if (first === second) {\n      return true;\n    }\n\n    // Check for the first object's keys in the second object.\n    for (let key in first) {\n      if (first[key] !== undefined && !(key in second)) {\n        return false;\n      }\n    }\n\n    // Check for the second object's keys in the first object.\n    for (let key in second) {\n      if (second[key] !== undefined && !(key in first)) {\n        return false;\n      }\n    }\n\n    // Compare the values for equality.\n    for (let key in first) {\n      // Get the values.\n      let firstValue = first[key];\n      let secondValue = second[key];\n\n      // If both are undefined, ignore the key.\n      if (firstValue === undefined && secondValue === undefined) {\n        continue;\n      }\n\n      // If only one value is undefined, the objects are not equal.\n      if (firstValue === undefined || secondValue === undefined) {\n        return false;\n      }\n\n      // Compare the values.\n      if (!deepEqual(firstValue, secondValue)) {\n        return false;\n      }\n    }\n\n    // At this point, the objects are equal.\n    return true;\n  }\n\n  /**\n   * Create a deep copy of a JSON array.\n   */\n  function deepArrayCopy(value: any): any {\n    let result = new Array<any>(value.length);\n    for (let i = 0, n = value.length; i < n; ++i) {\n      result[i] = deepCopy(value[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Create a deep copy of a JSON object.\n   */\n  function deepObjectCopy(value: any): any {\n    let result: any = {};\n    for (let key in value) {\n      // Ignore undefined values.\n      let subvalue = value[key];\n      if (subvalue === undefined) {\n        continue;\n      }\n      result[key] = deepCopy(subvalue);\n    }\n    return result;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which stores MIME data for general application use.\n *\n * #### Notes\n * This class does not attempt to enforce \"correctness\" of MIME types\n * and their associated data. Since this class is designed to transfer\n * arbitrary data and objects within the same application, it assumes\n * that the user provides correct and accurate data.\n */\nexport class MimeData {\n  /**\n   * Get an array of the MIME types contained within the dataset.\n   *\n   * @returns A new array of the MIME types, in order of insertion.\n   */\n  types(): string[] {\n    return this._types.slice();\n  }\n\n  /**\n   * Test whether the dataset has an entry for the given type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * @returns `true` if the dataset contains a value for the given\n   *   MIME type, `false` otherwise.\n   */\n  hasData(mime: string): boolean {\n    return this._types.indexOf(mime) !== -1;\n  }\n\n  /**\n   * Get the data value for the given MIME type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * @returns The value for the given MIME type, or `undefined` if\n   *   the dataset does not contain a value for the type.\n   */\n  getData(mime: string): any | undefined {\n    let i = this._types.indexOf(mime);\n    return i !== -1 ? this._values[i] : undefined;\n  }\n\n  /**\n   * Set the data value for the given MIME type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * @param data - The data value for the given MIME type.\n   *\n   * #### Notes\n   * This will overwrite any previous entry for the MIME type.\n   */\n  setData(mime: string, data: unknown): void {\n    this.clearData(mime);\n    this._types.push(mime);\n    this._values.push(data);\n  }\n\n  /**\n   * Remove the data entry for the given MIME type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * #### Notes\n   * This is a no-op if there is no entry for the given MIME type.\n   */\n  clearData(mime: string): void {\n    let i = this._types.indexOf(mime);\n    if (i !== -1) {\n      this._types.splice(i, 1);\n      this._values.splice(i, 1);\n    }\n  }\n\n  /**\n   * Remove all data entries from the dataset.\n   */\n  clear(): void {\n    this._types.length = 0;\n    this._values.length = 0;\n  }\n\n  private _types: string[] = [];\n  private _values: any[] = [];\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { topologicSort } from '@lumino/algorithm';\n\nimport { Token } from './token';\n\n/**\n * A user-defined application plugin.\n *\n * @typeParam T - The type for the application.\n *\n * @typeParam U - The service type, if the plugin `provides` one.\n *\n * #### Notes\n * Plugins are the foundation for building an extensible application.\n *\n * Plugins consume and provide \"services\", which are nothing more than\n * concrete implementations of interfaces and/or abstract types.\n *\n * Unlike regular imports and exports, which tie the service consumer\n * to a particular implementation of the service, plugins decouple the\n * service producer from the service consumer, allowing an application\n * to be easily customized by third parties in a type-safe fashion.\n */\nexport interface IPlugin<T, U> {\n  /**\n   * The human readable ID of the plugin.\n   *\n   * #### Notes\n   * This must be unique within an application.\n   */\n  id: string;\n\n  /**\n   * Plugin description.\n   *\n   * #### Notes\n   * This can be used to provide user documentation on the feature\n   * brought by a plugin.\n   */\n  description?: string;\n\n  /**\n   * Whether the plugin should be activated on application start or waiting for being\n   * required. If the value is 'defer' then the plugin should be activated only after\n   * the application is started.\n   *\n   * #### Notes\n   * The default is `false`.\n   */\n  autoStart?: boolean | 'defer';\n\n  /**\n   * The types of required services for the plugin, if any.\n   *\n   * #### Notes\n   * These tokens correspond to the services that are required by\n   * the plugin for correct operation.\n   *\n   * When the plugin is activated, a concrete instance of each type\n   * will be passed to the `activate()` function, in the order they\n   * are specified in the `requires` array.\n   */\n  requires?: Token<any>[];\n\n  /**\n   * The types of optional services for the plugin, if any.\n   *\n   * #### Notes\n   * These tokens correspond to the services that can be used by the\n   * plugin if available, but are not necessarily required.\n   *\n   * The optional services will be passed to the `activate()` function\n   * following all required services. If an optional service cannot be\n   * resolved, `null` will be passed in its place.\n   */\n  optional?: Token<any>[];\n\n  /**\n   * The type of service provided by the plugin, if any.\n   *\n   * #### Notes\n   * This token corresponds to the service exported by the plugin.\n   *\n   * When the plugin is activated, the return value of `activate()`\n   * is used as the concrete instance of the type.\n   */\n  provides?: Token<U> | null;\n\n  /**\n   * A function invoked to activate the plugin.\n   *\n   * @param app - The application provided by {@link PluginRegistry.application} .\n   *\n   * @param args - The services specified by the `requires` property.\n   *\n   * @returns The provided service, or a promise to the service.\n   *\n   * #### Notes\n   * This function will be called whenever the plugin is manually\n   * activated, or when another plugin being activated requires\n   * the service it provides.\n   *\n   * This function will not be called unless all of its required\n   * services can be fulfilled.\n   */\n  activate: (app: T, ...args: any[]) => U | Promise<U>;\n\n  /**\n   * A function invoked to deactivate the plugin.\n   *\n   * @param app - The application {@link PluginRegistry.application} .\n   *\n   * @param args - The services specified by the `requires` property.\n   */\n  deactivate?: ((app: T, ...args: any[]) => void | Promise<void>) | null;\n}\n\n/**\n * Plugin registry.\n */\nexport class PluginRegistry<T = any> {\n  constructor(options: PluginRegistry.IOptions = {}) {\n    if (options.validatePlugin) {\n      console.info(\n        'Plugins may be rejected by the custom validation plugin method.'\n      );\n      this._validatePlugin = options.validatePlugin;\n    }\n  }\n\n  /**\n   * The application object.\n   *\n   * It will be provided as first argument to the\n   * plugins activation and deactivation functions.\n   *\n   * It can only be set once.\n   *\n   * By default, it is `null`.\n   */\n  get application(): T {\n    return this._application;\n  }\n  set application(v: T) {\n    if (this._application !== null) {\n      throw Error(\n        'PluginRegistry.application is already set. It cannot be overridden.'\n      );\n    }\n\n    this._application = v;\n  }\n\n  /**\n   * The list of all the deferred plugins.\n   */\n  get deferredPlugins(): string[] {\n    return Array.from(this._plugins)\n      .filter(([id, plugin]) => plugin.autoStart === 'defer')\n      .map(([id, plugin]) => id);\n  }\n\n  /**\n   * Get a plugin description.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @returns The plugin description.\n   */\n  getPluginDescription(id: string): string {\n    return this._plugins.get(id)?.description ?? '';\n  }\n\n  /**\n   * Test whether a plugin is registered with the application.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @returns `true` if the plugin is registered, `false` otherwise.\n   */\n  hasPlugin(id: string): boolean {\n    return this._plugins.has(id);\n  }\n\n  /**\n   * Test whether a plugin is activated with the application.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @returns `true` if the plugin is activated, `false` otherwise.\n   */\n  isPluginActivated(id: string): boolean {\n    return this._plugins.get(id)?.activated ?? false;\n  }\n\n  /**\n   * List the IDs of the plugins registered with the application.\n   *\n   * @returns A new array of the registered plugin IDs.\n   */\n  listPlugins(): string[] {\n    return Array.from(this._plugins.keys());\n  }\n\n  /**\n   * Register a plugin with the application.\n   *\n   * @param plugin - The plugin to register.\n   *\n   * #### Notes\n   * An error will be thrown if a plugin with the same ID is already\n   * registered, or if the plugin has a circular dependency.\n   *\n   * If the plugin provides a service which has already been provided\n   * by another plugin, the new service will override the old service.\n   */\n  registerPlugin(plugin: IPlugin<T, any>): void {\n    // Throw an error if the plugin ID is already registered.\n    if (this._plugins.has(plugin.id)) {\n      throw new TypeError(`Plugin '${plugin.id}' is already registered.`);\n    }\n\n    if (!this._validatePlugin(plugin)) {\n      throw new Error(`Plugin '${plugin.id}' is not valid.`);\n    }\n\n    // Create the normalized plugin data.\n    const data = Private.createPluginData(plugin);\n\n    // Ensure the plugin does not cause a cyclic dependency.\n    Private.ensureNoCycle(data, this._plugins, this._services);\n\n    // Add the service token to the service map.\n    if (data.provides) {\n      this._services.set(data.provides, data.id);\n    }\n\n    // Add the plugin to the plugin map.\n    this._plugins.set(data.id, data);\n  }\n\n  /**\n   * Register multiple plugins with the application.\n   *\n   * @param plugins - The plugins to register.\n   *\n   * #### Notes\n   * This calls `registerPlugin()` for each of the given plugins.\n   */\n  registerPlugins(plugins: IPlugin<T, any>[]): void {\n    for (const plugin of plugins) {\n      this.registerPlugin(plugin);\n    }\n  }\n\n  /**\n   * Deregister a plugin with the application.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @param force - Whether to deregister the plugin even if it is active.\n   */\n  deregisterPlugin(id: string, force?: boolean): void {\n    const plugin = this._plugins.get(id);\n    if (!plugin) {\n      return;\n    }\n\n    if (plugin.activated && !force) {\n      throw new Error(`Plugin '${id}' is still active.`);\n    }\n\n    this._plugins.delete(id);\n  }\n\n  /**\n   * Activate the plugin with the given ID.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @returns A promise which resolves when the plugin is activated\n   *   or rejects with an error if it cannot be activated.\n   */\n  async activatePlugin(id: string): Promise<void> {\n    // Reject the promise if the plugin is not registered.\n    const plugin = this._plugins.get(id);\n    if (!plugin) {\n      throw new ReferenceError(`Plugin '${id}' is not registered.`);\n    }\n\n    // Resolve immediately if the plugin is already activated.\n    if (plugin.activated) {\n      return;\n    }\n\n    // Return the pending resolver promise if it exists.\n    if (plugin.promise) {\n      return plugin.promise;\n    }\n\n    // Resolve the required services for the plugin.\n    const required = plugin.requires.map(t => this.resolveRequiredService(t));\n\n    // Resolve the optional services for the plugin.\n    const optional = plugin.optional.map(t => this.resolveOptionalService(t));\n\n    // Setup the resolver promise for the plugin.\n    plugin.promise = Promise.all([...required, ...optional])\n      .then(services =>\n        plugin!.activate.apply(undefined, [this.application, ...services])\n      )\n      .then(service => {\n        plugin!.service = service;\n        plugin!.activated = true;\n        plugin!.promise = null;\n      })\n      .catch(error => {\n        plugin!.promise = null;\n        throw error;\n      });\n\n    // Return the pending resolver promise.\n    return plugin.promise;\n  }\n\n  /**\n   * Activate all the deferred plugins.\n   *\n   * @returns A promise which will resolve when each plugin is activated\n   * or rejects with an error if one cannot be activated.\n   */\n  async activatePlugins(\n    kind: 'startUp' | 'defer',\n    options: PluginRegistry.IStartOptions = {}\n  ): Promise<void> {\n    switch (kind) {\n      case 'defer': {\n        const promises = this.deferredPlugins\n          .filter(pluginId => this._plugins.get(pluginId)!.autoStart)\n          .map(pluginId => {\n            return this.activatePlugin(pluginId);\n          });\n        await Promise.all(promises);\n        break;\n      }\n      case 'startUp': {\n        // Collect the ids of the startup plugins.\n        const startups = Private.collectStartupPlugins(this._plugins, options);\n\n        // Generate the activation promises.\n        const promises = startups.map(async id => {\n          try {\n            return await this.activatePlugin(id);\n          } catch (error) {\n            console.error(`Plugin '${id}' failed to activate.`, error);\n          }\n        });\n        await Promise.all(promises);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Deactivate the plugin and its downstream dependents if and only if the\n   * plugin and its dependents all support `deactivate`.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @returns A list of IDs of downstream plugins deactivated with this one.\n   */\n  async deactivatePlugin(id: string): Promise<string[]> {\n    // Reject the promise if the plugin is not registered.\n    const plugin = this._plugins.get(id);\n    if (!plugin) {\n      throw new ReferenceError(`Plugin '${id}' is not registered.`);\n    }\n\n    // Bail early if the plugin is not activated.\n    if (!plugin.activated) {\n      return [];\n    }\n\n    // Check that this plugin can deactivate.\n    if (!plugin.deactivate) {\n      throw new TypeError(`Plugin '${id}'#deactivate() method missing`);\n    }\n\n    // Find the optimal deactivation order for plugins downstream of this one.\n    const manifest = Private.findDependents(id, this._plugins, this._services);\n    const downstream = manifest.map(id => this._plugins.get(id)!);\n\n    // Check that all downstream plugins can deactivate.\n    for (const plugin of downstream) {\n      if (!plugin.deactivate) {\n        throw new TypeError(\n          `Plugin ${plugin.id}#deactivate() method missing (depends on ${id})`\n        );\n      }\n    }\n\n    // Deactivate all downstream plugins.\n    for (const plugin of downstream) {\n      const services = [...plugin.requires, ...plugin.optional].map(service => {\n        const id = this._services.get(service);\n        return id ? this._plugins.get(id)!.service : null;\n      });\n\n      // Await deactivation so the next plugins only receive active services.\n      await plugin.deactivate!(this.application, ...services);\n      plugin.service = null;\n      plugin.activated = false;\n    }\n\n    // Remove plugin ID and return manifest of deactivated plugins.\n    manifest.pop();\n    return manifest;\n  }\n\n  /**\n   * Resolve a required service of a given type.\n   *\n   * @param token - The token for the service type of interest.\n   *\n   * @returns A promise which resolves to an instance of the requested\n   *   service, or rejects with an error if it cannot be resolved.\n   *\n   * #### Notes\n   * Services are singletons. The same instance will be returned each\n   * time a given service token is resolved.\n   *\n   * If the plugin which provides the service has not been activated,\n   * resolving the service will automatically activate the plugin.\n   *\n   * User code will not typically call this method directly. Instead,\n   * the required services for the user's plugins will be resolved\n   * automatically when the plugin is activated.\n   */\n  async resolveRequiredService<U>(token: Token<U>): Promise<U> {\n    // Reject the promise if there is no provider for the type.\n    const id = this._services.get(token);\n    if (!id) {\n      throw new TypeError(`No provider for: ${token.name}.`);\n    }\n\n    // Activate the plugin if necessary.\n    const plugin = this._plugins.get(id)!;\n    if (!plugin.activated) {\n      await this.activatePlugin(id);\n    }\n\n    return plugin.service;\n  }\n\n  /**\n   * Resolve an optional service of a given type.\n   *\n   * @param token - The token for the service type of interest.\n   *\n   * @returns A promise which resolves to an instance of the requested\n   *   service, or `null` if it cannot be resolved.\n   *\n   * #### Notes\n   * Services are singletons. The same instance will be returned each\n   * time a given service token is resolved.\n   *\n   * If the plugin which provides the service has not been activated,\n   * resolving the service will automatically activate the plugin.\n   *\n   * User code will not typically call this method directly. Instead,\n   * the optional services for the user's plugins will be resolved\n   * automatically when the plugin is activated.\n   */\n  async resolveOptionalService<U>(token: Token<U>): Promise<U | null> {\n    // Resolve with `null` if there is no provider for the type.\n    const id = this._services.get(token);\n    if (!id) {\n      return null;\n    }\n\n    // Activate the plugin if necessary.\n    const plugin = this._plugins.get(id)!;\n    if (!plugin.activated) {\n      try {\n        await this.activatePlugin(id);\n      } catch (reason) {\n        console.error(reason);\n        return null;\n      }\n    }\n\n    return plugin.service;\n  }\n\n  private _application: any = null;\n  private _validatePlugin: (plugin: IPlugin<any, any>) => boolean = () => true;\n  private _plugins = new Map<string, Private.IPluginData<T>>();\n  private _services = new Map<Token<any>, string>();\n}\n\n/**\n * PluginRegistry namespace\n */\nexport namespace PluginRegistry {\n  /**\n   * PluginRegistry constructor options.\n   */\n  export interface IOptions {\n    /**\n     * Validate that a plugin is allowed to be registered.\n     *\n     * Default is `() => true`.\n     *\n     * @param plugin The plugin to validate\n     * @returns Whether the plugin can be registered or not.\n     *\n     * #### Notes\n     * We recommend you print a console message with the reason\n     * a plugin is invalid.\n     */\n    validatePlugin?: (plugin: IPlugin<any, any>) => boolean;\n  }\n\n  /**\n   * An options object for application startup.\n   */\n  export interface IStartOptions {\n    /**\n     * The plugins to activate on startup.\n     *\n     * #### Notes\n     * These will be *in addition* to any `autoStart` plugins.\n     */\n    startPlugins?: string[];\n\n    /**\n     * The plugins to **not** activate on startup.\n     *\n     * #### Notes\n     * This will override `startPlugins` and any `autoStart` plugins.\n     */\n    ignorePlugins?: string[];\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An object which holds the full application state for a plugin.\n   */\n  export interface IPluginData<T = any> {\n    /**\n     * The human readable ID of the plugin.\n     */\n    readonly id: string;\n\n    /**\n     * The description of the plugin.\n     */\n    readonly description: string;\n\n    /**\n     * Whether the plugin should be activated on application start or waiting for being\n     * required. If the value is 'defer' then the plugin should be activated only after\n     * the application is started.\n     */\n    readonly autoStart: boolean | 'defer';\n\n    /**\n     * The types of required services for the plugin, or `[]`.\n     */\n    readonly requires: Token<any>[];\n\n    /**\n     * The types of optional services for the the plugin, or `[]`.\n     */\n    readonly optional: Token<any>[];\n\n    /**\n     * The type of service provided by the plugin, or `null`.\n     */\n    readonly provides: Token<any> | null;\n\n    /**\n     * The function which activates the plugin.\n     */\n    readonly activate: (app: T, ...args: any[]) => any;\n\n    /**\n     * The optional function which deactivates the plugin.\n     */\n    readonly deactivate:\n      | ((app: T, ...args: any[]) => void | Promise<void>)\n      | null;\n\n    /**\n     * Whether the plugin has been activated.\n     */\n    activated: boolean;\n\n    /**\n     * The resolved service for the plugin, or `null`.\n     */\n    service: any | null;\n\n    /**\n     * The pending resolver promise, or `null`.\n     */\n    promise: Promise<void> | null;\n  }\n\n  class PluginData<T = any, U = any> implements IPluginData<T> {\n    private _activated = false;\n    private _promise: Promise<void> | null = null;\n    private _service: U | null = null;\n\n    constructor(plugin: IPlugin<T, U>) {\n      this.id = plugin.id;\n      this.description = plugin.description ?? '';\n      this.activate = plugin.activate;\n      this.deactivate = plugin.deactivate ?? null;\n      this.provides = plugin.provides ?? null;\n      this.autoStart = plugin.autoStart ?? false;\n      this.requires = plugin.requires ? plugin.requires.slice() : [];\n      this.optional = plugin.optional ? plugin.optional.slice() : [];\n    }\n\n    /**\n     * The human readable ID of the plugin.\n     */\n    readonly id: string;\n\n    /**\n     * The description of the plugin.\n     */\n    readonly description: string;\n\n    /**\n     * Whether the plugin should be activated on application start or waiting for being\n     * required. If the value is 'defer' then the plugin should be activated only after\n     * the application is started.\n     */\n    readonly autoStart: boolean | 'defer';\n\n    /**\n     * The types of required services for the plugin, or `[]`.\n     */\n    readonly requires: Token<any>[];\n\n    /**\n     * The types of optional services for the the plugin, or `[]`.\n     */\n    readonly optional: Token<any>[];\n\n    /**\n     * The type of service provided by the plugin, or `null`.\n     */\n    readonly provides: Token<any> | null;\n\n    /**\n     * The function which activates the plugin.\n     */\n    readonly activate: (app: T, ...args: any[]) => any;\n\n    /**\n     * The optional function which deactivates the plugin.\n     */\n    readonly deactivate:\n      | ((app: T, ...args: any[]) => void | Promise<void>)\n      | null;\n\n    /**\n     * Whether the plugin has been activated.\n     */\n    get activated(): boolean {\n      return this._activated;\n    }\n    set activated(a: boolean) {\n      this._activated = a;\n    }\n\n    /**\n     * The resolved service for the plugin, or `null`.\n     */\n    get service(): U | null {\n      return this._service;\n    }\n    set service(s: U | null) {\n      this._service = s;\n    }\n\n    /**\n     * The pending resolver promise, or `null`.\n     */\n    get promise(): Promise<void> | null {\n      return this._promise;\n    }\n    set promise(p: Promise<void> | null) {\n      this._promise = p;\n    }\n  }\n\n  /**\n   * Create a normalized plugin data object for the given plugin.\n   */\n  export function createPluginData<T>(\n    plugin: IPlugin<any, any>\n  ): IPluginData<T> {\n    return new PluginData(plugin);\n  }\n\n  /**\n   * Ensure no cycle is present in the plugin resolution graph.\n   *\n   * If a cycle is detected, an error will be thrown.\n   */\n  export function ensureNoCycle(\n    plugin: IPluginData,\n    plugins: Map<string, IPluginData>,\n    services: Map<Token<any>, string>\n  ): void {\n    const dependencies = [...plugin.requires, ...plugin.optional];\n    const visit = (token: Token<any>): boolean => {\n      if (token === plugin.provides) {\n        return true;\n      }\n      const id = services.get(token);\n      if (!id) {\n        return false;\n      }\n      const visited = plugins.get(id)!;\n      const dependencies = [...visited.requires, ...visited.optional];\n      if (dependencies.length === 0) {\n        return false;\n      }\n      trace.push(id);\n      if (dependencies.some(visit)) {\n        return true;\n      }\n      trace.pop();\n      return false;\n    };\n\n    // Bail early if there cannot be a cycle.\n    if (!plugin.provides || dependencies.length === 0) {\n      return;\n    }\n\n    // Setup a stack to trace service resolution.\n    const trace = [plugin.id];\n\n    // Throw an exception if a cycle is present.\n    if (dependencies.some(visit)) {\n      throw new ReferenceError(`Cycle detected: ${trace.join(' -> ')}.`);\n    }\n  }\n\n  /**\n   * Find dependents in deactivation order.\n   *\n   * @param id - The ID of the plugin of interest.\n   *\n   * @param plugins - The map containing all plugins.\n   *\n   * @param services - The map containing all services.\n   *\n   * @returns A list of dependent plugin IDs in order of deactivation\n   *\n   * #### Notes\n   * The final item of the returned list is always the plugin of interest.\n   */\n  export function findDependents(\n    id: string,\n    plugins: Map<string, IPluginData>,\n    services: Map<Token<any>, string>\n  ): string[] {\n    const edges = new Array<[string, string]>();\n    const add = (id: string): void => {\n      const plugin = plugins.get(id)!;\n      // FIXME In the case of missing optional dependencies, we may consider\n      // deactivating and reactivating the plugin without the missing service.\n      const dependencies = [...plugin.requires, ...plugin.optional];\n      edges.push(\n        ...dependencies.reduce<[string, string][]>((acc, dep) => {\n          const service = services.get(dep);\n          if (service) {\n            // An edge is oriented from dependent to provider.\n            acc.push([id, service]);\n          }\n          return acc;\n        }, [])\n      );\n    };\n\n    for (const id of plugins.keys()) {\n      add(id);\n    }\n\n    // Filter edges\n    // - Get all packages that dependent on the package to be deactivated\n    const newEdges = edges.filter(edge => edge[1] === id);\n    let oldSize = 0;\n    while (newEdges.length > oldSize) {\n      const previousSize = newEdges.length;\n      // Get all packages that dependent on packages that will be deactivated\n      const packagesOfInterest = new Set(newEdges.map(edge => edge[0]));\n      for (const poi of packagesOfInterest) {\n        edges\n          .filter(edge => edge[1] === poi)\n          .forEach(edge => {\n            // We check it is not already included to deal with circular dependencies\n            if (!newEdges.includes(edge)) {\n              newEdges.push(edge);\n            }\n          });\n      }\n      oldSize = previousSize;\n    }\n\n    const sorted = topologicSort(newEdges);\n    const index = sorted.findIndex(candidate => candidate === id);\n\n    if (index === -1) {\n      return [id];\n    }\n\n    return sorted.slice(0, index + 1);\n  }\n\n  /**\n   * Collect the IDs of the plugins to activate on startup.\n   */\n  export function collectStartupPlugins(\n    plugins: Map<string, IPluginData>,\n    options: PluginRegistry.IStartOptions\n  ): string[] {\n    // Create a set to hold the plugin IDs.\n    const collection = new Set<string>();\n\n    // Collect the auto-start (non deferred) plugins.\n    for (const id of plugins.keys()) {\n      if (plugins.get(id)!.autoStart === true) {\n        collection.add(id);\n      }\n    }\n\n    // Add the startup plugins.\n    if (options.startPlugins) {\n      for (const id of options.startPlugins) {\n        collection.add(id);\n      }\n    }\n\n    // Remove the ignored plugins.\n    if (options.ignorePlugins) {\n      for (const id of options.ignorePlugins) {\n        collection.delete(id);\n      }\n    }\n\n    // Return the collected startup plugins.\n    return Array.from(collection);\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A class which wraps a promise into a delegate object.\n *\n * #### Notes\n * This class is useful when the logic to resolve or reject a promise\n * cannot be defined at the point where the promise is created.\n */\nexport class PromiseDelegate<T> {\n  /**\n   * Construct a new promise delegate.\n   */\n  constructor() {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * The promise wrapped by the delegate.\n   */\n  readonly promise: Promise<T>;\n\n  /**\n   * Resolve the wrapped promise with the given value.\n   *\n   * @param value - The value to use for resolving the promise.\n   */\n  resolve(value: T | PromiseLike<T>): void {\n    let resolve = this._resolve;\n    resolve(value);\n  }\n\n  /**\n   * Reject the wrapped promise with the given value.\n   *\n   * @reason - The reason for rejecting the promise.\n   */\n  reject(reason: unknown): void {\n    let reject = this._reject;\n    reject(reason);\n  }\n\n  private _resolve: (value: T | PromiseLike<T>) => void;\n  private _reject: (reason: any) => void;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A runtime object which captures compile-time type information.\n *\n * #### Notes\n * A token captures the compile-time type of an interface or class in\n * an object which can be used at runtime in a type-safe fashion.\n */\nexport class Token<T> {\n  /**\n   * Construct a new token.\n   *\n   * @param name - A human readable name for the token.\n   * @param description - Token purpose description for documentation.\n   */\n  constructor(name: string, description?: string) {\n    this.name = name;\n    this.description = description ?? '';\n    this._tokenStructuralPropertyT = null!;\n  }\n\n  /**\n   * Token purpose description.\n   */\n  readonly description?: string; // FIXME remove `?` for the next major version\n\n  /**\n   * The human readable name for the token.\n   *\n   * #### Notes\n   * This can be useful for debugging and logging.\n   */\n  readonly name: string;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  private _tokenStructuralPropertyT: T;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n// Fallback\nexport function fallbackRandomValues(buffer: Uint8Array): void {\n  let value = 0;\n  for (let i = 0, n = buffer.length; i < n; ++i) {\n    if (i % 4 === 0) {\n      value = (Math.random() * 0xffffffff) >>> 0;\n    }\n    buffer[i] = value & 0xff;\n    value >>>= 8;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport { fallbackRandomValues } from './random';\n\n// Declare ambient variables for `window` and `require` to avoid a\n// hard dependency on both. This package must run on node.\ndeclare let require: any;\n\n/**\n * The namespace for random number related functionality.\n */\nexport namespace Random {\n  /**\n   * A function which generates random bytes.\n   *\n   * @param buffer - The `Uint8Array` to fill with random bytes.\n   *\n   * #### Notes\n   * A cryptographically strong random number generator will be used if\n   * available. Otherwise, `Math.random` will be used as a fallback for\n   * randomness.\n   *\n   * The following RNGs are supported, listed in order of precedence:\n   *   - `window.crypto.getRandomValues`\n   *   - `window.msCrypto.getRandomValues`\n   *   - `require('crypto').randomFillSync\n   *   - `require('crypto').randomBytes\n   *   - `Math.random`\n   */\n  export const getRandomValues = (() => {\n    // Look up the crypto module if available.\n    const crypto: any =\n      (typeof require !== 'undefined' && require('crypto')) || null;\n\n    // Node 7+\n    if (crypto && typeof crypto.randomFillSync === 'function') {\n      return function getRandomValues(buffer: Uint8Array): void {\n        return crypto.randomFillSync(buffer);\n      };\n    }\n\n    // Node 0.10+\n    if (crypto && typeof crypto.randomBytes === 'function') {\n      return function getRandomValues(buffer: Uint8Array): void {\n        let bytes = crypto.randomBytes(buffer.length);\n        for (let i = 0, n = bytes.length; i < n; ++i) {\n          buffer[i] = bytes[i];\n        }\n      };\n    }\n\n    // Fallback\n    return fallbackRandomValues;\n  })();\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * A function which creates a function that generates UUID v4 identifiers.\n *\n * @returns A new function that creates a UUID v4 string.\n *\n * #### Notes\n * This implementation complies with RFC 4122.\n *\n * This uses `Random.getRandomValues()` for random bytes, which in\n * turn will use the underlying `crypto` module of the platform if\n * it is available. The fallback for randomness is `Math.random`.\n */\nexport function uuid4Factory(\n  getRandomValues: (bytes: Uint8Array) => void\n): () => string {\n  // Create a 16 byte array to hold the random values.\n  const bytes = new Uint8Array(16);\n\n  // Create a look up table from bytes to hex strings.\n  const lut = new Array<string>(256);\n\n  // Pad the single character hex digits with a leading zero.\n  for (let i = 0; i < 16; ++i) {\n    lut[i] = '0' + i.toString(16);\n  }\n\n  // Populate the rest of the hex digits.\n  for (let i = 16; i < 256; ++i) {\n    lut[i] = i.toString(16);\n  }\n\n  // Return a function which generates the UUID.\n  return function uuid4(): string {\n    // Get a new batch of random values.\n    getRandomValues(bytes);\n\n    // Set the UUID version number to 4.\n    bytes[6] = 0x40 | (bytes[6] & 0x0f);\n\n    // Set the clock sequence bit to the RFC spec.\n    bytes[8] = 0x80 | (bytes[8] & 0x3f);\n\n    // Assemble the UUID string.\n    return (\n      lut[bytes[0]] +\n      lut[bytes[1]] +\n      lut[bytes[2]] +\n      lut[bytes[3]] +\n      '-' +\n      lut[bytes[4]] +\n      lut[bytes[5]] +\n      '-' +\n      lut[bytes[6]] +\n      lut[bytes[7]] +\n      '-' +\n      lut[bytes[8]] +\n      lut[bytes[9]] +\n      '-' +\n      lut[bytes[10]] +\n      lut[bytes[11]] +\n      lut[bytes[12]] +\n      lut[bytes[13]] +\n      lut[bytes[14]] +\n      lut[bytes[15]]\n    );\n  };\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { Random } from './random.node';\nimport { uuid4Factory } from './uuid';\n\n/**\n * The namespace for UUID related functionality.\n */\nexport namespace UUID {\n  /**\n   * A function which generates UUID v4 identifiers.\n   *\n   * @returns A new UUID v4 string.\n   *\n   * #### Notes\n   * This implementation complies with RFC 4122.\n   *\n   * This uses `Random.getRandomValues()` for random bytes, which in\n   * turn will use the underlying `crypto` module of the platform if\n   * it is available. The fallback for randomness is `Math.random`.\n   */\n  export const uuid4 = uuid4Factory(Random.getRandomValues);\n}\n"],"names":[],"mappings":"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"}